(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{196:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js数据类型"}},[t._v("#")]),t._v(" JS数据类型")]),t._v(" "),a("h2",{attrs:{id:"_1-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-number"}},[t._v("#")]),t._v(" 1.number")]),t._v(" "),a("h3",{attrs:{id:"包含"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包含"}},[t._v("#")]),t._v(" 包含")]),t._v(" "),a("p",[t._v("整数负数和0\nNaN -----与任何值都不相等包括它本身"),a("br"),t._v("\nInfinity -----无穷大的值")]),t._v(" "),a("h3",{attrs:{id:"isnan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnan"}},[t._v("#")]),t._v(" isNaN")]),t._v(" "),a("p",[t._v("isNaN() 函数用于检查其参数是否是非数字值"),a("br"),t._v("\n返回值为true或者false")]),t._v(" "),a("h3",{attrs:{id:"number-value-js内置的转换方法-全局方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-value-js内置的转换方法-全局方法"}},[t._v("#")]),t._v(" Number([value]) -----JS内置的转换方法,全局方法")]),t._v(" "),a("blockquote",[a("p",[t._v("isNaN在检测的时候，==比较的时候，数学运算的时候；会用到此方法")])]),t._v(" "),a("p",[t._v("1.字符串->数字")]),t._v(" "),a("p",[t._v("都是有效数字字符的字符串--\x3e具体的数字"),a("br"),t._v("\n字符串中存在非有效字符--\x3eNaN"),a("br"),t._v("\n空字符串--\x3e0")]),t._v(" "),a("p",[t._v("2.布尔->数字")]),t._v(" "),a("p",[t._v("true--\x3e1"),a("br"),t._v("\nfalse--\x3e0")]),t._v(" "),a("p",[t._v("3.空->数字")]),t._v(" "),a("p",[t._v("null--\x3e0"),a("br"),t._v("\nundefine--\x3eNaN")]),t._v(" "),a("p",[t._v("4.Symbol->数字")]),t._v(" "),a("p",[t._v("不能，会报错")]),t._v(" "),a("p",[t._v("5.对象->数字")]),t._v(" "),a("p",[t._v('过程:先把obj转化为字符串"[object Object]" 再把字符串转化为Number("[object Object]")')]),t._v(" "),a("p",[t._v("空数组对象--\x3e0"),a("br"),t._v("\n其余对象--\x3eNaN")]),t._v(" "),a("p",[t._v("6.函数--\x3e数字")]),t._v(" "),a("p",[t._v("过程:先把对象转化为字符串，再把字符串转化为数字")]),t._v(" "),a("p",[t._v("都是NaN")]),t._v(" "),a("h3",{attrs:{id:"parseint-value-和parsefloat-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseint-value-和parsefloat-value"}},[t._v("#")]),t._v(" parseInt([value])和parseFloat([value])")]),t._v(" "),a("p",[t._v("原理：把字符串转化为数字类型（如果处理的值不是字符串，需要先转化为字符串再转化为数字类型）")]),t._v(" "),a("p",[t._v("即只对string有效")]),t._v(" "),a("p",[t._v("定义：从字符串最左边开始找，把找到的有效数字转化为数字，直到遇到一个非有效字符，再结束查找（第一个字符不是数字就直接返回NaN了）")]),t._v(" "),a("p",[t._v("parseFloat比parseInt多识别一位小数点")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--------------------字符串转数字---------------------------")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"234"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1、纯数字转换")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" \n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 字符串在运算操作中会被当做数字类型来处理")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("     s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" \n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 字符前加“+”")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("     console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 string的两个转换函数，只对string有效")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4 强制类型转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2、数字加字母等非数字转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'234string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("　"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//234.0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("blockquote",[a("p",[t._v("toFix(N) 数字.toFix(N) 保留小数点后N位，最后结果是一个string\nMax_SAFE_INTEGER 最大安全数（js能识别的最大安全整数） 9007199254740991 ·注意：ES6又提供了一个新数据类型BigInt")])]),t._v(" "),a("h2",{attrs:{id:"_2-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-string"}},[t._v("#")]),t._v(" 2.string")]),t._v(" "),a("p",[t._v("单、双、反引号包起来的都是字符串")]),t._v(" "),a("h3",{attrs:{id:"其它类型转字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它类型转字符串类型"}},[t._v("#")]),t._v(" 其它类型转字符串类型")]),t._v(" "),a("p",[t._v("方法：String([value]) 和 [value].toString()")]),t._v(" "),a("p",[t._v("隐式转换：字符串拼接时；对象转换为数字时要先转换为字符串")]),t._v(" "),a("p",[t._v('普通对象转字符串 "[object object]"')]),t._v(" "),a("p",[t._v('数组对象转字符串 用逗号分隔数组的每一项 "第一项,第二项,..."')]),t._v(" "),a("h3",{attrs:{id:"字符串的数学运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的数学运算"}},[t._v("#")]),t._v(" 字符串的数学运算")]),t._v(" "),a("p",[t._v("取余 %(膜)")]),t._v(" "),a("p",[t._v("加减乘除的数学运算---如果遇到非数字类型，需要基于Number方法强制转换成数字然后运算")]),t._v(" "),a("p",[a("strong",[t._v("加的字符串拼接")])]),t._v(" "),a("p",[t._v("只要加的任意一边出现字符串，则为字符串拼接")]),t._v(" "),a("p",[t._v("对象转数字需要先转换为字符串，变为字符串后直接拼接，不再转为数字")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tencent'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaNtencentnull9false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("真实项目中经常把一些变量的值拼接到指定的字符串中")]),t._v(" "),a("p",[t._v("传统的拼接方式\n在字符串中基于\"++\"或'++'的方式把变量拼接到字符串中\nlet result=year+'年'+mounth+'月'+day+'日'+hours+':'+minutes+':'+seconds\n这种方式涉及很多恶心的规则，容易拼错")]),t._v(" "),a("p",[t._v("ES6中的模板字符串\n"),a("code",[t._v("${}")]),t._v(" ---在${}中存放变量或其他JS表达式即可\nlet result="),a("code",[t._v("${year}年${mounth}月${day}日${hours}：${minutes}：${seconds}")]),t._v("\n很简单")]),t._v(" "),a("h3",{attrs:{id:"字符串操作函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作函数"}},[t._v("#")]),t._v(" 字符串操作函数")]),t._v(" "),a("ul",[a("li",[t._v("slice 截取相应位置到之后字符串同 substring")]),t._v(" "),a("li",[t._v("substr 起始位置到指定个数")]),t._v(" "),a("li",[t._v("trim（）去字符串 2 端空格")]),t._v(" "),a("li",[t._v("startsWith 判断起始字符")]),t._v(" "),a("li",[t._v("replace 替换字符串")]),t._v(" "),a("li",[t._v("repeat 重复字符串")])]),t._v(" "),a("h3",{attrs:{id:"字符串方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法"}},[t._v("#")]),t._v(" 字符串方法")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200801170929.png",alt:""}}),t._v("\n展开__proto__可以看到String 数据类型支持的方法和属性")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("方法\t描述\ncharAt()\t返回指定索引位置的字符，index介于0-length-1\ncharCodeAt()\t返回指定索引位置字符的 Unicode 值\nconcat()\t连接两个或多个字符串，返回连接后的字符串\nfromCharCode()\t将 Unicode 转换为字符串\nindexOf()\t返回字符串中检索指定字符第一次出现的位置\nlastIndexOf()\t返回字符串中检索指定字符最后一次出现的位置\nlocaleCompare()\t用本地特定的顺序来比较两个字符串\nmatch()\t找到一个或多个正则表达式的匹配\nreplace()\t替换与正则表达式匹配的子串\nsearch()\t检索与正则表达式相匹配的值\nslice()\t提取字符串的片断，并在新的字符串中返回被提取的部分\nsplit()\t把字符串分割为子字符串数组\nsubstr()\t从起始索引号提取字符串中指定数目的字符\nsubstring()\t提取字符串中两个指定的索引号之间的字符\ntoLocaleLowerCase()\t根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射\ntoLocaleUpperCase()\t根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射\ntoLowerCase()\t把字符串转换为小写\ntoString()\t返回字符串对象值\ntoUpperCase()\t把字符串转换为大写\ntrim()\t移除字符串首尾空白\nvalueOf()\t返回某个字符串对象的原始值\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JohnJohn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 是字符串")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// h")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 104")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JohnJohn104104, x+y+y")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2, 索引从0开始")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'o'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//J,hnJ,hn")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hnJohn")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hn，[2,3]")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// johnjohn,小写")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JOHNJOHN,大写")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转成Stirng")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JOHNJOHN,大写")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JohnJohn,去除两端的空格")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回某个字符串对象的原始值")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h3",{attrs:{id:"js-与-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-与-区别"}},[t._v("#")]),t._v(" JS == 与 === 区别")]),t._v(" "),a("blockquote",[a("p",[t._v("=是赋值，==和===用来比较")])]),t._v(" "),a("p",[t._v("1、对于 string、number 等基础类型之间的比较，== 和 === 是有区别的")]),t._v(" "),a("p",[t._v('a）不同类型间比较，== 之比较 "转化成同一类型后的值" 看 "值" 是否相等，=== 如果类型不同，其结果就是不等。')]),t._v(" "),a("p",[t._v('b）同类型比较，直接进行 "值" 比较，两者结果一样。')]),t._v(" "),a("p",[t._v("2、对于 Array,Object 等高级类型，== 和 === 是没有区别的")]),t._v(" "),a("p",[t._v('进行 "指针地址" 比较')]),t._v(" "),a("p",[t._v("3、基础类型与高级类型之间的比较，== 和 === 是有区别的")]),t._v(" "),a("p",[t._v('a）对于 ==，将高级转化为基础类型，进行 "值" 比较')]),t._v(" "),a("p",[t._v("b）因为类型不同，=== 结果为 false")]),t._v(" "),a("p",[t._v("4、!= 为 == 的非运算，!== 为 === 的非运算")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("；\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\ntest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" num   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true　相同类型　相同值 ")]),t._v("\ntest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" num  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true　相同类型　相同值 ")]),t._v("\ntest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" num  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false test与num类型相同，其值也相同,　非运算肯定是false ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true 　把str转换为数字，检查其是否相等。 ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" str   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false  == 的 非运算 ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" str  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false  类型不同，直接返回false ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" str  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true   num 与 str类型不同 意味着其两者不等　非运算自然是true啦")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和"}},[t._v("#")]),t._v(" \"\"和''")]),t._v(" "),a("p",[t._v("双引号\" \" 中用单引号 ' ' 可以不用加反斜杠")]),t._v(" "),a("p",[t._v('双引号" " 中用双引号 " " 需要加反斜杠')]),t._v(" "),a("p",[t._v("单引号 ' ' 中用双引号\" \" 不需要加反斜杠，当然加了也可以")]),t._v(" "),a("h3",{attrs:{id:"字符串查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串查找"}},[t._v("#")]),t._v(" 字符串查找")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("str.charAt(index)从一个字符串中返回指定索引的字符")]),t._v("，index介于0-length-1")]),t._v(" "),a("li",[a("strong",[t._v("str.endsWith(searchString[, length])返回boolean")]),t._v("，判断当前字符串是否是以另外一个给定的子字符串“结尾”的，length：作为 str 的长度。默认值为 str.length。")]),t._v(" "),a("li",[a("strong",[t._v("str.includes(searchString[, position])返回boolean")]),t._v("，判断一个字符串是否包含在另一个字符串中，从postition索引开始搜寻，默认0")]),t._v(" "),a("li",[a("strong",[t._v("str.indexOf(searchValue [, fromIndex])返回第一次出现的索引，没有出现则为-1")]),t._v("，fromIndex小于0则返回null，大于length返回-1")]),t._v(" "),a("li",[a("strong",[t._v("str.lastIndexOf(searchValue[, fromIndex])返回从字符串尾部开始第一次出现的索引，没有则-1")]),t._v("，fromIndex的值相对于从尾部开始的索引")]),t._v(" "),a("li",[a("strong",[t._v("str.match(regexp)返回值：如果g模式返回全部匹配结果，不会捕获，如果非g模式，返回第一个匹配结果及其捕获组")]),t._v("，regexp正则表达式对象")]),t._v(" "),a("li",[a("strong",[t._v("str.matchAll(regexp)返回一个所有匹配的结果及分组捕获组的迭代器")]),t._v("，迭代器只能使用一次")]),t._v(" "),a("li",[a("strong",[t._v("str.search(regexp)返回首次匹配到的索引，没有则-1")]),t._v("，执行正则表达式和 String 对象之间的一个搜索匹配")]),t._v(" "),a("li",[a("strong",[t._v("str.startsWith(searchString[, position])返回boolean")]),t._v("，判断str是否以另外一个子字符串pos位置开头，pos为开始搜索的位置，默认从str头部开始")]),t._v(" "),a("li",[a("strong",[t._v("s.toString()返回一个表示调用对象的字符串")]),t._v("，该方法返回指定对象的字符串形式")]),t._v(" "),a("li",[a("strong",[t._v("str.valueOf()返回一个String对象的原始值")]),t._v("，该值等同String.prototype.toString()，通常在js内部调用")]),t._v(" "),a("li",[a("strong",[t._v("string[Symbol.iterator]返回一个新的迭代器对象")]),t._v("，它遍历字符串的代码点，返回每一个代码点的字符串值。")]),t._v(" "),a("li",[a("strong",[t._v("String.raw(callSite, ...substitutions)、\nString.raw`templateString`返回给定模板字符串的元素字符串")]),t._v("，callSite：一个模板字符串的“调用点对象”，...substitutions：任意个可选的参数，表示任意个内插表达式对应的值，templateString：模板字符串，可包含占位符（${...}）")])]),t._v(" "),a("h3",{attrs:{id:"字符串操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[t._v("#")]),t._v(" 字符串操作")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("str.trim()返回去掉两端空白后的新字符串")])]),t._v(" "),a("li",[a("strong",[t._v("str.trimEnd/trimRight()返回去除末(右)端空白的新字符串")])]),t._v(" "),a("li",[a("strong",[t._v("str.trimStart/trimLeft()返回去除开头(左)端空格的新字符串")])]),t._v(" "),a("li",[a("strong",[t._v("str.split([separator[, limit]])返回一个以指定分隔符出现位置分隔而成的一个数组，数组元素不包含分隔符")]),t._v("，limit限制返回的分割片段(默认全返回)")]),t._v(" "),a("li",[a("strong",[t._v("str.slice(beginIndex[, endIndex])返回新字符串")]),t._v("，从原str中返回beagin索引到end(不包含)索引(默认到尾部)的新字符串")]),t._v(" "),a("li",[a("strong",[t._v("str.padEnd(targetLength [, padString])返回新字符串")]),t._v("，用一个字符串填充当前字符串(可重复)，返回填充后达到指定长度的字符串，从尾部开始填充")]),t._v(" "),a("li",[a("strong",[t._v("str.padStart(targetLength [, padString])返回新字符串")]),t._v("，用另一个字符串填充当前字符串(可重复)，直到给定的长度。填充从当前字符串头部开始")]),t._v(" "),a("li",[a("strong",[t._v("str.repeat(count)返回一个新字符串")]),t._v("，重复str字符串count次，返回拼接之后的新字符串")]),t._v(" "),a("li",[a("strong",[t._v("str.replace(regexp|substr, newSubStr|function)返回新字符串")]),t._v("，参数1：如果是正则会匹配所有满足匹配条件的内容，如果是字符串则只会匹配第一个满足的内容。参数2：如果是字符串则此串会替换参数1匹配到的内容，如果是func，将会把func的返回值替换匹配的内容")]),t._v(" "),a("li",[t._v("**referenceStr.localeCompare(compareString[, locales[, options]])返回值：如果引用字符存在于比较字符之前则为负数; 如果引用字符存在于比较字符之后则为正数; 相等的时候返回 0 **")]),t._v(" "),a("li",[a("strong",[t._v("str.concat(string2, string3[, ..., stringN])返回新的字符串")]),t._v("，将一个或多个字符串与原字符串连接合并")]),t._v(" "),a("li",[a("strong",[t._v("str.substring(indexStart[, indexEnd])返回新字符串")]),t._v("，返回一个字符串在开始索引到结束索引(不包括)之间的一个子集")])]),t._v(" "),a("h3",{attrs:{id:"字符串转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串转换"}},[t._v("#")]),t._v(" 字符串转换")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("str.toLocaleLowerCase([locale, locale, ...])返回新字符串")]),t._v("，locale 为指明要转换成小写格式的特定语言区域，返回调用字符串被转换为小写的格式。")]),t._v(" "),a("li",[a("strong",[t._v("str.toLocaleUpperCase([locale, locale, ...])返回新字符串")]),t._v("，locale 参数指明要转换成大写格式的特定语言区域，根据本地化的大小写映射规则将输入的字符串转化成大写的格式")]),t._v(" "),a("li",[a("strong",[t._v("str.toLowerCase()返回新字符串")]),t._v("，将调用该方法的字符串值转为小写形式，并返回")]),t._v(" "),a("li",[a("strong",[t._v("str.toUpperCase()返回一个新字符串")]),t._v("，将调用字符串转换为大写形式返回")])]),t._v(" "),a("h3",{attrs:{id:"字符串转码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串转码"}},[t._v("#")]),t._v(" 字符串转码")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("String.fromCharCode(num1, ..., numN) 返回长度为N的字符串")]),t._v("，参数：UTF-16代码单元的数字。 范围介于0到65535（0xFFFF）之间。")]),t._v(" "),a("li",[a("strong",[t._v("String.fromCodePoint(num1[, ...[, numN]])返回指定Unicode编码位置创建的字符串")]),t._v("，参数：一串Unicode编码位置")]),t._v(" "),a("li",[a("strong",[t._v("str.charCodeAt(index)返回给定索引位置字符的UTF-16编码")]),t._v("，索引超过length-1则返回NaN")]),t._v(" "),a("li",[a("strong",[t._v("str.codePointAt(pos)返回值为给定位置字符的 一个 Unicode 编码数字")])]),t._v(" "),a("li",[a("strong",[t._v("str.normalize([form])返回给定的 Unicode 规范化形式的字符串")]),t._v("，按照指定的一种 Unicode 正规形式将当前字符串正规化")])]),t._v(" "),a("h3",{attrs:{id:"字符串静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串静态方法"}},[t._v("#")]),t._v(" 字符串静态方法")]),t._v(" "),a("ol",[a("li",[t._v("String.raw(callSite, ...substitutions)、String.raw`templateString`")]),t._v(" "),a("li",[t._v("String.fromCharCode()")]),t._v(" "),a("li",[t._v("String.fromCodePoint()")])]),t._v(" "),a("h2",{attrs:{id:"_3-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-boolean"}},[t._v("#")]),t._v(" 3.boolean")]),t._v(" "),a("p",[t._v("包含true和false")]),t._v(" "),a("p",[t._v("和 bool 比较会转成数值比较，false-0，true-1")]),t._v(" "),a("h3",{attrs:{id:"其他类型转布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他类型转布尔类型"}},[t._v("#")]),t._v(" 其他类型转布尔类型")]),t._v(" "),a("p",[t._v("方法：Boolean([value]) 和 ![value] 和 !![value]")]),t._v(" "),a("p",[t._v("值：除了 0 '' NaN null undefine 这 五个为false，其余都为true")]),t._v(" "),a("p",[t._v("条件判断时 每一个条件最后一定是true/false if(1==1){...}")]),t._v(" "),a("p",[t._v("只写一个值，也要把这个值转化为布尔，再校验程序的真假 if(1){...}")]),t._v(" "),a("p",[t._v("！！可检测转为 bool 类型的结果")]),t._v(" "),a("h2",{attrs:{id:"_4-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-null"}},[t._v("#")]),t._v(" 4.null")]),t._v(" "),a("p",[t._v("定义了，但值是空的")]),t._v(" "),a("h2",{attrs:{id:"_5-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-undefined"}},[t._v("#")]),t._v(" 5.undefined")]),t._v(" "),a("p",[t._v("未定义，所以也就没有值了")]),t._v(" "),a("p",[t._v("undefined和null的区别:null和undefined的"),a("code",[t._v("值相等，但类型不等")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"_6-symbol-es6新增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-symbol-es6新增"}},[t._v("#")]),t._v(" 6.symbol(ES6新增)")]),t._v(" "),a("h2",{attrs:{id:"_7-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-object"}},[t._v("#")]),t._v(" 7.object")]),t._v(" "),a("h2",{attrs:{id:"_8-bigint-es10新增"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-bigint-es10新增"}},[t._v("#")]),t._v(" 8.bigInt(ES10新增)")]),t._v(" "),a("p",[t._v("用于任意长度的整数。")]),t._v(" "),a("h2",{attrs:{id:"_1-应用拓展-相互转换规则、堆栈内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-应用拓展-相互转换规则、堆栈内存"}},[t._v("#")]),t._v(" 1 应用拓展--相互转换规则、堆栈内存")]),t._v(" "),a("h3",{attrs:{id:"_1-条件判断里的相互转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-条件判断里的相互转换规则"}},[t._v("#")]),t._v(" 1.条件判断里的相互转换规则")]),t._v(" "),a("p",[t._v("数字==字符串 字符串转数字，再比较")]),t._v(" "),a("p",[t._v("数字==布尔 布尔转数字")]),t._v(" "),a("p",[t._v("字符串==布尔 两者都转数字")]),t._v(" "),a("p",[t._v("对象==数字 对象转数字")]),t._v(" "),a("p",[t._v("对象==字符串 对象转字符串")]),t._v(" "),a("p",[t._v("对象==布尔 两者转数字")]),t._v(" "),a("p",[t._v("对象==对象 主要看空间地址 空间地址相同则true，反之false")]),t._v(" "),a("p",[t._v("规律： 处理字符串和对象比较时，要把对象转为字符串；其余都先转为数字类型再比较")]),t._v(" "),a("p",[t._v("特殊："),a("br"),t._v("\nNaN和其他值永不相等"),a("br"),t._v("\nnull和undefined不等于任何一个数据类型，"),a("br"),t._v("\n但是，"),a("br"),t._v("\nnull==undefined true"),a("br"),t._v("\nnull===undefined false")]),t._v(" "),a("p",[t._v("undefined === undefined true"),a("br"),t._v("\nnull === null true"),a("br"),t._v(" "),a("a",{attrs:{href:"https://segmentfault.com/q/1010000011022627",target:"_blank",rel:"https://docs.5102it.cn/CanvasBoard.html"}},[t._v("为什么null === null 为什么是true"),a("OutboundLink")],1),t._v(" "),a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200807145753.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2-数据类型之间的区别（堆栈内存）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据类型之间的区别（堆栈内存）"}},[t._v("#")]),t._v(" 2.数据类型之间的区别（堆栈内存）")]),t._v(" "),a("p",[t._v("webkit底层运行机制"),a("br"),t._v("\n底层渲染过程"),a("br"),t._v("\n1.浏览器打开页面，浏览器引擎自上而下渲染执行代码"),a("br"),t._v("\n2.执行代码时会给它一个环境ECStack（Execution Context Stack执行环境栈）=>栈内存stack"),a("br"),t._v("\n3.最开始执行的是全局代码，所以会形成一个EC（GLOBAL）全局上下文，在栈内存中执行全局的代码"),a("br"),t._v("\n4.在全局的执行上下文中有一个VO(GLOBAL)全局变量对象，可以把接下来定义的变量和对应的值储存到这里面"),a("br"),t._v("\n内存的概念"),a("br"),t._v("\nStack 栈内存 内存条 供代码自上而下执行，储存基本类型值"),a("br"),t._v("\nHeap 堆内存 硬盘 储存引用类型值"),a("br"),t._v("\n堆栈内存，就是在计算机内存中分配出来一块空间，用来执行和储存代码")]),t._v(" "),a("p",[t._v("基本数据类型（值类型）"),a("br"),t._v("\n结构简单，直接把创建的值存到“栈内存”中即可"),a("br"),t._v("\n定义一个变量的3个步骤 let a=12;"),a("br"),t._v("\n1.创建一个值，直接存在栈内存中"),a("br"),t._v("\n2.创建一个变量a，存在VO(GLOBAL)中"),a("br"),t._v("\n3.让创建的变量a和创建的值12关联在一起=> =赋值的操作"),a("br"),t._v("\n图例"),a("br"),t._v(" "),a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200627093654.png",alt:""}})]),t._v(" "),a("p",[t._v("引用数据类型"),a("br"),t._v("\n结构复杂，一个综合体，包含很多值"),a("br"),t._v("\n所以要单独开辟空间（堆内存）来储存"),a("br"),t._v("\n定义一个对象的3个步骤 let n={...}"),a("br"),t._v("\n1.创建值"),a("br"),t._v("\n开辟一个堆内存（heap），每个堆都有一个16进制的地址"),a("br"),t._v("\n把对象中的键值对分别储存到堆内存中"),a("br"),t._v("\n把堆内存的地址放在栈内存中，供变量引用"),a("br"),t._v("\n2.创建一个变量"),a("br"),t._v("\n3.让变量和之前创建的堆内存的地址关联"),a("br"),t._v("\n图例"),a("br"),t._v(" "),a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200627095812.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_2-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-类型转换"}},[t._v("#")]),t._v(" 2 类型转换")]),t._v(" "),a("h3",{attrs:{id:"typeof操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof操作符"}},[t._v("#")]),t._v(" typeof操作符")]),t._v(" "),a("p",[t._v("Number() 转换为数字， String() 转换为字符串， Boolean() 转化为布尔值。")]),t._v(" "),a("p",[t._v("在 JavaScript 中有 6 种不同的数据类型：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("string\nnumber\nboolean\nobject\nfunction\nsymbol\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("3 种对象类型：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Object\nDate\nArray\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("2 个不包含任何值的数据类型：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("null\nundefined\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("typeof操作符查看JavaScript变量的数据类型")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 boolean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" myCar                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 undefined (如果 myCar 没有声明)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("ul",[a("li",[t._v("NaN 的数据类型是 number")]),t._v(" "),a("li",[t._v("数组(Array)的数据类型是 object")]),t._v(" "),a("li",[t._v("日期(Date)的数据类型为 object")]),t._v(" "),a("li",[t._v("null 的数据类型是 object")]),t._v(" "),a("li",[t._v("未定义变量的数据类型为 undefined")]),t._v(" "),a("li",[t._v("如果对象是 JavaScript Array 或 JavaScript Date ，我们就无法通过 typeof 来判断他们的类型，因为都是 返回 object。")])]),t._v(" "),a("h3",{attrs:{id:"constructor-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor-属性"}},[t._v("#")]),t._v(" constructor 属性")]),t._v(" "),a("p",[t._v("返回所有 JavaScript 变量的构造函数。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 String()  { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Number()  { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Boolean() { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Array()   { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Object()  { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Date()    { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Function(){ [native code] }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v('可以使用 constructor 属性来查看对象是否为数组 (包含字符串 "Array"):')]),t._v(" "),a("h3",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),a("p",[t._v("通过使用 JavaScript 函数")]),t._v(" "),a("p",[t._v("通过 JavaScript 自身自动转换")]),t._v(" "),a("p",[t._v("全局方法 String() 可以将任何类型的数字，字母，变量，表达式转换为字符串")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将变量 x 转换为字符串并返回")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数字 123 转换为字符串并返回")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数字表达式转换为字符串并返回")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("Number的方法 toString() 也是有同样的效果。更多Number的方法：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toExponential")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t把对象的值转换为指数计数法。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t把数字转换为字符串，结果的小数点后有指定n位数的数字。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPrecision")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t把数字格式化为指定的长度。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("Boolean 方法 toString() 也有相同的效果。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 返回 "false"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 返回 "true"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("Date 方法 toString() 也有相同的效果。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200802100152.png",alt:""}})]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更多关于日期转换为字符串的函数：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象返回一个月中的某一天 (1 ~ 31)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象返回一周中的某一天 (0 ~ 6)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象以四位数字返回年份。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHours")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的小时 (0 ~ 23)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMilliseconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的毫秒(0 ~ 999)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMinutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的分钟 (0 ~ 59)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象返回月份 (0 ~ 11)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的秒数 (0 ~ 59)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 1970 年 1 月 1 日至今的毫秒数。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("字符串转日期：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-12-25"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换日期格式")]),t._v("\nstr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/-/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "2010/08/01";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建日期对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n反之，日期类型转化为格式化的字符串：\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//完整的格式化  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" time2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyyy-MM-dd hh:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("format")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fmt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"M+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//月份 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//日 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"h+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHours")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//小时 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMinutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//秒 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"q+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//季度 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"S"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMilliseconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//毫秒 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理年份")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reYear "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(y+)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resultYear "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reYear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resultYear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" yearformatPart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resultYear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配到的格式化字符")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" yearVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" yearformatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fmt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("yearformatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yearVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//本次需要替换的数据 ")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" formatPart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配到的格式化字符")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" replaceVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fmt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replaceVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);