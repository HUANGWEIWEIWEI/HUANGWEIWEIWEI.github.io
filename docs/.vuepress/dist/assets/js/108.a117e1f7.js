(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{283:function(n,e,o){"use strict";o.r(e);var v=o(6),_=Object(v.a)({},(function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("h1",{attrs:{id:"《2-深入浅出node-js》"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#《2-深入浅出node-js》"}},[n._v("#")]),n._v(" 《2.深入浅出Node.js》")]),n._v(" "),o("p",[n._v("本书从不同的视角介绍了 Node 内在的特点和结构。")]),n._v(" "),o("p",[n._v("由首章Node 介绍为索引，涉及Node 的各个方面，")]),n._v(" "),o("p",[n._v("主要内容包含")]),n._v(" "),o("p",[o("code",[n._v("模块机制")]),n._v("的揭示、")]),n._v(" "),o("p",[o("code",[n._v("异步I/O")]),n._v(" 实现原理的展现、")]),n._v(" "),o("p",[o("code",[n._v("异步编程")]),n._v("的探讨、")]),n._v(" "),o("p",[o("code",[n._v("内存控制")]),n._v("的介绍、")]),n._v(" "),o("p",[n._v("二进制数据"),o("code",[n._v("Buffer")]),n._v(" 的细节、")]),n._v(" "),o("p",[n._v("Node 中的"),o("code",[n._v("网络编程")]),n._v("基础、")]),n._v(" "),o("p",[n._v("Node 中的"),o("code",[n._v("Web 开发")]),n._v("、")]),n._v(" "),o("p",[o("code",[n._v("进程间的消息传递")]),n._v("、")]),n._v(" "),o("p",[o("code",[n._v("Node 测试")]),n._v("以及")]),n._v(" "),o("p",[n._v("通过Node "),o("code",[n._v("构建产品")]),n._v("需要的注意事项。")]),n._v(" "),o("p",[n._v("最后的附录介绍了Node 的安装、调试、编码规范和NPM 仓库等事宜。")]),n._v(" "),o("p",[n._v("第 1 章　Node简介\n1.1　Node的诞生历程\n1.2　Node的命名与起源\n1.3　Node给JavaScript带来的意义\n1.4　Node的特点\n1.5　Node的应用场景\n1.6　Node的使用者\n1.7　参考资源\n第 2 章　模块机制\n2.1　CommonJS规范\n2.2　Node的模块实现\n2.3　核心模块\n2.4　C/C++扩展模块\n2.5　模块调用栈\n2.6　包与NPM\n2.7　前后端共用模块\n2.8　总结\n2.9　参考资源\n第 3 章　异步I/O\n3.1　为什么要异步I/O\n3.2　异步I/O实现现状\n3.3　Node的异步I/O\n3.4　非I/O的异步API\n3.5　事件驱动与高性能服务器\n3.6　总结\n3.7　参考资源\n第 4 章　异步编程\n4.1　函数式编程\n4.2　异步编程的优势与难点\n4.3　异步编程解决方案\n4.4　异步并发控制\n4.5　总结\n4.6　参考资源\n第 5 章　内存控制\n5.1　V8的垃圾回收机制与内存限制\n5.2　高效使用内存\n5.3　内存指标\n5.4　内存泄漏\n5.5　内存泄漏排查\n5.6　大内存应用\n5.7　总结\n5.8　参考资源\n第 6 章　理解Buffer\n6.1　Buffer结构\n6.2　Buffer的转换\n6.3　Buffer的拼接\n6.4　Buffer与性能\n6.5　总结\n6.6　参考资源\n第 7 章　网络编程\n7.1　构建TCP服务\n7.2　构建UDP服务\n7.3　构建HTTP服务\n7.4　构建WebSocket服务\n7.5　网络服务与安全\n7.6　总结\n7.7　参考资源\n第 8 章　构建Web应用\n8.1　基础功能\n8.2　数据上传\n8.3　路由解析\n8.4　中间件\n8.5　页面渲染\n8.6　总结\n8.7　参考资源\n第 9 章　玩转进程\n9.1　服务模型的变迁\n9.2　多进程架构\n9.3　集群稳定之路\n9.4　Cluster模块\n9.5　总结\n9.6　参考资源\n第 10 章　测试\n10.1　单元测试\n10.2　性能测试\n10.3　总结\n10.4　参考资源\n第 11 章　产品化\n11.1　项目工程化\n11.2　部署流程\n11.3　性能\n11.4　日志\n11.5　监控报警\n11.6　稳定性\n11.7　异构共存\n11.8　总结\n11.9　参考资源\n附录 A　安装Node\nA.1　Windows系统下的Node安装\nA.2　Mac系统下Node的安装\nA.3　Linux系统下Node的安装\nA.4　总结\nA.5　参考资源\n附录 B　调试Node\nB.1　Debugger\nB.2　Node Inspector\nB.3　总结\n附录 C　Node编码规范\nC.1　根源\nC.2　编码规范\nC.3　最佳实践\nC.4　总结\nC.5　参考资源\n附录 D　搭建局域NPM仓库\nD.1　NPM仓库的安装\nD.2　高阶应用\nD.3　总结\nD.4　参考资源")])])}),[],!1,null,null,null);e.default=_.exports}}]);