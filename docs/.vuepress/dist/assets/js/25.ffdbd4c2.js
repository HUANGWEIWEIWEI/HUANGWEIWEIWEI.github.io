(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{202:function(t,s,a){"use strict";a.r(s);var n=a(6),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_3-js数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-js数据类型"}},[t._v("#")]),t._v(" 3.JS数据类型")]),t._v(" "),a("h2",{attrs:{id:"_1-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-number"}},[t._v("#")]),t._v(" 1.number")]),t._v(" "),a("h3",{attrs:{id:"包含"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包含"}},[t._v("#")]),t._v(" 包含")]),t._v(" "),a("p",[t._v("整数负数和0\nNaN -----与任何值都不相等包括它本身"),a("br"),t._v("\nInfinity -----无穷大的值")]),t._v(" "),a("h3",{attrs:{id:"isnan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnan"}},[t._v("#")]),t._v(" isNaN")]),t._v(" "),a("p",[t._v("isNaN() 函数用于检查其参数是否是非数字值"),a("br"),t._v("\n返回值为true或者false")]),t._v(" "),a("h3",{attrs:{id:"number-value-js内置的转换方法-全局方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-value-js内置的转换方法-全局方法"}},[t._v("#")]),t._v(" Number([value]) -----JS内置的转换方法,全局方法")]),t._v(" "),a("blockquote",[a("p",[t._v("isNaN在检测的时候，==比较的时候，数学运算的时候；会用到此方法")])]),t._v(" "),a("p",[t._v("1.字符串->数字")]),t._v(" "),a("p",[t._v("都是有效数字字符的字符串--\x3e具体的数字"),a("br"),t._v("\n字符串中存在非有效字符--\x3eNaN"),a("br"),t._v("\n空字符串--\x3e0")]),t._v(" "),a("p",[t._v("2.布尔->数字")]),t._v(" "),a("p",[t._v("true--\x3e1"),a("br"),t._v("\nfalse--\x3e0")]),t._v(" "),a("p",[t._v("3.空->数字")]),t._v(" "),a("p",[t._v("null--\x3e0"),a("br"),t._v("\nundefine--\x3eNaN")]),t._v(" "),a("p",[t._v("4.Symbol->数字")]),t._v(" "),a("p",[t._v("不能，会报错")]),t._v(" "),a("p",[t._v("5.对象->数字")]),t._v(" "),a("p",[t._v('过程:先把obj转化为字符串"[object Object]" 再把字符串转化为Number("[object Object]")')]),t._v(" "),a("p",[t._v("空数组对象--\x3e0"),a("br"),t._v("\n其余对象--\x3eNaN")]),t._v(" "),a("p",[t._v("6.函数--\x3e数字")]),t._v(" "),a("p",[t._v("过程:先把对象转化为字符串，再把字符串转化为数字")]),t._v(" "),a("p",[t._v("都是NaN")]),t._v(" "),a("h3",{attrs:{id:"parseint-value-和parsefloat-value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseint-value-和parsefloat-value"}},[t._v("#")]),t._v(" parseInt([value])和parseFloat([value])")]),t._v(" "),a("p",[t._v("原理：把字符串转化为数字类型（如果处理的值不是字符串，需要先转化为字符串再转化为数字类型）")]),t._v(" "),a("p",[t._v("即只对string有效")]),t._v(" "),a("p",[t._v("定义：从字符串最左边开始找，把找到的有效数字转化为数字，直到遇到一个非有效字符，再结束查找（第一个字符不是数字就直接返回NaN了）")]),t._v(" "),a("p",[t._v("parseFloat比parseInt多识别一位小数点")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//--------------------字符串转数字---------------------------")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"234"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1、纯数字转换")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" \n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1 字符串在运算操作中会被当做数字类型来处理")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("     s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" \n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 字符前加“+”")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("     console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3 string的两个转换函数，只对string有效")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4 强制类型转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2、数字加字母等非数字转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'234string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("　"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//234.0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("blockquote",[a("p",[t._v("toFix(N) 数字.toFix(N) 保留小数点后N位，最后结果是一个string\nMax_SAFE_INTEGER 最大安全数（js能识别的最大安全整数） 9007199254740991 ·注意：ES6又提供了一个新数据类型BigInt")])]),t._v(" "),a("h2",{attrs:{id:"_2-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-string"}},[t._v("#")]),t._v(" 2.string")]),t._v(" "),a("p",[t._v("单、双、反引号包起来的都是字符串")]),t._v(" "),a("h3",{attrs:{id:"其它类型转字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它类型转字符串类型"}},[t._v("#")]),t._v(" 其它类型转字符串类型")]),t._v(" "),a("p",[t._v("方法：String([value]) 和 [value].toString()")]),t._v(" "),a("p",[t._v("隐式转换：字符串拼接时；对象转换为数字时要先转换为字符串")]),t._v(" "),a("p",[t._v('普通对象转字符串 "[object object]"')]),t._v(" "),a("p",[t._v('数组对象转字符串 用逗号分隔数组的每一项 "第一项,第二项,..."')]),t._v(" "),a("h3",{attrs:{id:"字符串的数学运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的数学运算"}},[t._v("#")]),t._v(" 字符串的数学运算")]),t._v(" "),a("p",[t._v("取余 %(膜)")]),t._v(" "),a("p",[t._v("加减乘除的数学运算---如果遇到非数字类型，需要基于Number方法强制转换成数字然后运算")]),t._v(" "),a("p",[a("strong",[t._v("加的字符串拼接")])]),t._v(" "),a("p",[t._v("只要加的任意一边出现字符串，则为字符串拼接")]),t._v(" "),a("p",[t._v("对象转数字需要先转换为字符串，变为字符串后直接拼接，不再转为数字")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tencent'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaNtencentnull9false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("真实项目中经常把一些变量的值拼接到指定的字符串中")]),t._v(" "),a("p",[t._v("传统的拼接方式\n在字符串中基于\"++\"或'++'的方式把变量拼接到字符串中\nlet result=year+'年'+mounth+'月'+day+'日'+hours+':'+minutes+':'+seconds\n这种方式涉及很多恶心的规则，容易拼错")]),t._v(" "),a("p",[t._v("ES6中的模板字符串\n"),a("code",[t._v("${}")]),t._v(" ---在${}中存放变量或其他JS表达式即可\nlet result="),a("code",[t._v("${year}年${mounth}月${day}日${hours}：${minutes}：${seconds}")]),t._v("\n很简单")]),t._v(" "),a("h3",{attrs:{id:"字符串操作函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作函数"}},[t._v("#")]),t._v(" 字符串操作函数")]),t._v(" "),a("ul",[a("li",[t._v("slice 截取相应位置到之后字符串同 substring")]),t._v(" "),a("li",[t._v("substr 起始位置到指定个数")]),t._v(" "),a("li",[t._v("trim（）去字符串 2 端空格")]),t._v(" "),a("li",[t._v("startsWith 判断起始字符")]),t._v(" "),a("li",[t._v("replace 替换字符串")]),t._v(" "),a("li",[t._v("repeat 重复字符串")])]),t._v(" "),a("h3",{attrs:{id:"字符串方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串方法"}},[t._v("#")]),t._v(" 字符串方法")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200801170929.png",alt:""}}),t._v("\n展开__proto__可以看到String 数据类型支持的方法和属性")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("方法\t描述\ncharAt()\t返回指定索引位置的字符，index介于0-length-1\ncharCodeAt()\t返回指定索引位置字符的 Unicode 值\nconcat()\t连接两个或多个字符串，返回连接后的字符串\nfromCharCode()\t将 Unicode 转换为字符串\nindexOf()\t返回字符串中检索指定字符第一次出现的位置\nlastIndexOf()\t返回字符串中检索指定字符最后一次出现的位置\nlocaleCompare()\t用本地特定的顺序来比较两个字符串\nmatch()\t找到一个或多个正则表达式的匹配\nreplace()\t替换与正则表达式匹配的子串\nsearch()\t检索与正则表达式相匹配的值\nslice()\t提取字符串的片断，并在新的字符串中返回被提取的部分\nsplit()\t把字符串分割为子字符串数组\nsubstr()\t从起始索引号提取字符串中指定数目的字符\nsubstring()\t提取字符串中两个指定的索引号之间的字符\ntoLocaleLowerCase()\t根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射\ntoLocaleUpperCase()\t根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射\ntoLowerCase()\t把字符串转换为小写\ntoString()\t返回字符串对象值\ntoUpperCase()\t把字符串转换为大写\ntrim()\t移除字符串首尾空白\nvalueOf()\t返回某个字符串对象的原始值\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JohnJohn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x 是字符串")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// h")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 104")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JohnJohn104104, x+y+y")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2, 索引从0开始")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'o'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//J,hnJ,hn")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hnJohn")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hn，[2,3]")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// johnjohn,小写")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JOHNJOHN,大写")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转成Stirng")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JOHNJOHN,大写")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JohnJohn,去除两端的空格")]),t._v("\ny "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回某个字符串对象的原始值")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h3",{attrs:{id:"js-与-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-与-区别"}},[t._v("#")]),t._v(" JS == 与 === 区别")]),t._v(" "),a("blockquote",[a("p",[t._v("=是赋值，==和===用来比较")])]),t._v(" "),a("p",[t._v("1、对于 string、number 等基础类型之间的比较，== 和 === 是有区别的")]),t._v(" "),a("p",[t._v('a）不同类型间比较，== 之比较 "转化成同一类型后的值" 看 "值" 是否相等，=== 如果类型不同，其结果就是不等。')]),t._v(" "),a("p",[t._v('b）同类型比较，直接进行 "值" 比较，两者结果一样。')]),t._v(" "),a("p",[t._v("2、对于 Array,Object 等高级类型，== 和 === 是没有区别的")]),t._v(" "),a("p",[t._v('进行 "指针地址" 比较')]),t._v(" "),a("p",[t._v("3、基础类型与高级类型之间的比较，== 和 === 是有区别的")]),t._v(" "),a("p",[t._v('a）对于 ==，将高级转化为基础类型，进行 "值" 比较')]),t._v(" "),a("p",[t._v("b）因为类型不同，=== 结果为 false")]),t._v(" "),a("p",[t._v("4、!= 为 == 的非运算，!== 为 === 的非运算")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("；\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\ntest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" num   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true　相同类型　相同值 ")]),t._v("\ntest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" num  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true　相同类型　相同值 ")]),t._v("\ntest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" num  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false test与num类型相同，其值也相同,　非运算肯定是false ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" str   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true 　把str转换为数字，检查其是否相等。 ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" str   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false  == 的 非运算 ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" str  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false  类型不同，直接返回false ")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" str  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true   num 与 str类型不同 意味着其两者不等　非运算自然是true啦")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和"}},[t._v("#")]),t._v(" \"\"和''")]),t._v(" "),a("p",[t._v("双引号\" \" 中用单引号 ' ' 可以不用加反斜杠")]),t._v(" "),a("p",[t._v('双引号" " 中用双引号 " " 需要加反斜杠')]),t._v(" "),a("p",[t._v("单引号 ' ' 中用双引号\" \" 不需要加反斜杠，当然加了也可以")]),t._v(" "),a("h3",{attrs:{id:"字符串查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串查找"}},[t._v("#")]),t._v(" 字符串查找")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("str.charAt(index)从一个字符串中返回指定索引的字符")]),t._v("，index介于0-length-1")]),t._v(" "),a("li",[a("strong",[t._v("str.endsWith(searchString[, length])返回boolean")]),t._v("，判断当前字符串是否是以另外一个给定的子字符串“结尾”的，length：作为 str 的长度。默认值为 str.length。")]),t._v(" "),a("li",[a("strong",[t._v("str.includes(searchString[, position])返回boolean")]),t._v("，判断一个字符串是否包含在另一个字符串中，从postition索引开始搜寻，默认0")]),t._v(" "),a("li",[a("strong",[t._v("str.indexOf(searchValue [, fromIndex])返回第一次出现的索引，没有出现则为-1")]),t._v("，fromIndex小于0则返回null，大于length返回-1")]),t._v(" "),a("li",[a("strong",[t._v("str.lastIndexOf(searchValue[, fromIndex])返回从字符串尾部开始第一次出现的索引，没有则-1")]),t._v("，fromIndex的值相对于从尾部开始的索引")]),t._v(" "),a("li",[a("strong",[t._v("str.match(regexp)返回值：如果g模式返回全部匹配结果，不会捕获，如果非g模式，返回第一个匹配结果及其捕获组")]),t._v("，regexp正则表达式对象")]),t._v(" "),a("li",[a("strong",[t._v("str.matchAll(regexp)返回一个所有匹配的结果及分组捕获组的迭代器")]),t._v("，迭代器只能使用一次")]),t._v(" "),a("li",[a("strong",[t._v("str.search(regexp)返回首次匹配到的索引，没有则-1")]),t._v("，执行正则表达式和 String 对象之间的一个搜索匹配")]),t._v(" "),a("li",[a("strong",[t._v("str.startsWith(searchString[, position])返回boolean")]),t._v("，判断str是否以另外一个子字符串pos位置开头，pos为开始搜索的位置，默认从str头部开始")]),t._v(" "),a("li",[a("strong",[t._v("s.toString()返回一个表示调用对象的字符串")]),t._v("，该方法返回指定对象的字符串形式")]),t._v(" "),a("li",[a("strong",[t._v("str.valueOf()返回一个String对象的原始值")]),t._v("，该值等同String.prototype.toString()，通常在js内部调用")]),t._v(" "),a("li",[a("strong",[t._v("string[Symbol.iterator]返回一个新的迭代器对象")]),t._v("，它遍历字符串的代码点，返回每一个代码点的字符串值。")]),t._v(" "),a("li",[a("strong",[t._v("String.raw(callSite, ...substitutions)、\nString.raw`templateString`返回给定模板字符串的元素字符串")]),t._v("，callSite：一个模板字符串的“调用点对象”，...substitutions：任意个可选的参数，表示任意个内插表达式对应的值，templateString：模板字符串，可包含占位符（${...}）")])]),t._v(" "),a("h3",{attrs:{id:"字符串操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[t._v("#")]),t._v(" 字符串操作")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("str.trim()返回去掉两端空白后的新字符串")])]),t._v(" "),a("li",[a("strong",[t._v("str.trimEnd/trimRight()返回去除末(右)端空白的新字符串")])]),t._v(" "),a("li",[a("strong",[t._v("str.trimStart/trimLeft()返回去除开头(左)端空格的新字符串")])]),t._v(" "),a("li",[a("strong",[t._v("str.split([separator[, limit]])返回一个以指定分隔符出现位置分隔而成的一个数组，数组元素不包含分隔符")]),t._v("，limit限制返回的分割片段(默认全返回)")]),t._v(" "),a("li",[a("strong",[t._v("str.slice(beginIndex[, endIndex])返回新字符串")]),t._v("，从原str中返回beagin索引到end(不包含)索引(默认到尾部)的新字符串")]),t._v(" "),a("li",[a("strong",[t._v("str.padEnd(targetLength [, padString])返回新字符串")]),t._v("，用一个字符串填充当前字符串(可重复)，返回填充后达到指定长度的字符串，从尾部开始填充")]),t._v(" "),a("li",[a("strong",[t._v("str.padStart(targetLength [, padString])返回新字符串")]),t._v("，用另一个字符串填充当前字符串(可重复)，直到给定的长度。填充从当前字符串头部开始")]),t._v(" "),a("li",[a("strong",[t._v("str.repeat(count)返回一个新字符串")]),t._v("，重复str字符串count次，返回拼接之后的新字符串")]),t._v(" "),a("li",[a("strong",[t._v("str.replace(regexp|substr, newSubStr|function)返回新字符串")]),t._v("，参数1：如果是正则会匹配所有满足匹配条件的内容，如果是字符串则只会匹配第一个满足的内容。参数2：如果是字符串则此串会替换参数1匹配到的内容，如果是func，将会把func的返回值替换匹配的内容")]),t._v(" "),a("li",[t._v("**referenceStr.localeCompare(compareString[, locales[, options]])返回值：如果引用字符存在于比较字符之前则为负数; 如果引用字符存在于比较字符之后则为正数; 相等的时候返回 0 **")]),t._v(" "),a("li",[a("strong",[t._v("str.concat(string2, string3[, ..., stringN])返回新的字符串")]),t._v("，将一个或多个字符串与原字符串连接合并")]),t._v(" "),a("li",[a("strong",[t._v("str.substring(indexStart[, indexEnd])返回新字符串")]),t._v("，返回一个字符串在开始索引到结束索引(不包括)之间的一个子集")])]),t._v(" "),a("h3",{attrs:{id:"字符串转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串转换"}},[t._v("#")]),t._v(" 字符串转换")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("str.toLocaleLowerCase([locale, locale, ...])返回新字符串")]),t._v("，locale 为指明要转换成小写格式的特定语言区域，返回调用字符串被转换为小写的格式。")]),t._v(" "),a("li",[a("strong",[t._v("str.toLocaleUpperCase([locale, locale, ...])返回新字符串")]),t._v("，locale 参数指明要转换成大写格式的特定语言区域，根据本地化的大小写映射规则将输入的字符串转化成大写的格式")]),t._v(" "),a("li",[a("strong",[t._v("str.toLowerCase()返回新字符串")]),t._v("，将调用该方法的字符串值转为小写形式，并返回")]),t._v(" "),a("li",[a("strong",[t._v("str.toUpperCase()返回一个新字符串")]),t._v("，将调用字符串转换为大写形式返回")])]),t._v(" "),a("h3",{attrs:{id:"字符串转码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串转码"}},[t._v("#")]),t._v(" 字符串转码")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("String.fromCharCode(num1, ..., numN) 返回长度为N的字符串")]),t._v("，参数：UTF-16代码单元的数字。 范围介于0到65535（0xFFFF）之间。")]),t._v(" "),a("li",[a("strong",[t._v("String.fromCodePoint(num1[, ...[, numN]])返回指定Unicode编码位置创建的字符串")]),t._v("，参数：一串Unicode编码位置")]),t._v(" "),a("li",[a("strong",[t._v("str.charCodeAt(index)返回给定索引位置字符的UTF-16编码")]),t._v("，索引超过length-1则返回NaN")]),t._v(" "),a("li",[a("strong",[t._v("str.codePointAt(pos)返回值为给定位置字符的 一个 Unicode 编码数字")])]),t._v(" "),a("li",[a("strong",[t._v("str.normalize([form])返回给定的 Unicode 规范化形式的字符串")]),t._v("，按照指定的一种 Unicode 正规形式将当前字符串正规化")])]),t._v(" "),a("h3",{attrs:{id:"字符串静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串静态方法"}},[t._v("#")]),t._v(" 字符串静态方法")]),t._v(" "),a("ol",[a("li",[t._v("String.raw(callSite, ...substitutions)、String.raw`templateString`")]),t._v(" "),a("li",[t._v("String.fromCharCode()")]),t._v(" "),a("li",[t._v("String.fromCodePoint()")])]),t._v(" "),a("h2",{attrs:{id:"_3-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-boolean"}},[t._v("#")]),t._v(" 3.boolean")]),t._v(" "),a("p",[t._v("包含true和false")]),t._v(" "),a("p",[t._v("和 bool 比较会转成数值比较，false-0，true-1")]),t._v(" "),a("h3",{attrs:{id:"其他类型转布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他类型转布尔类型"}},[t._v("#")]),t._v(" 其他类型转布尔类型")]),t._v(" "),a("p",[t._v("方法：Boolean([value]) 和 ![value] 和 !![value]")]),t._v(" "),a("p",[t._v("值：除了 0 '' NaN null undefine 这 五个为false，其余都为true")]),t._v(" "),a("p",[t._v("条件判断时 每一个条件最后一定是true/false if(1==1){...}")]),t._v(" "),a("p",[t._v("只写一个值，也要把这个值转化为布尔，再校验程序的真假 if(1){...}")]),t._v(" "),a("p",[t._v("！！可检测转为 bool 类型的结果")]),t._v(" "),a("h2",{attrs:{id:"_4-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-null"}},[t._v("#")]),t._v(" 4.null")]),t._v(" "),a("p",[t._v("定义了，但值是空的")]),t._v(" "),a("h2",{attrs:{id:"_5-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-undefined"}},[t._v("#")]),t._v(" 5.undefined")]),t._v(" "),a("p",[t._v("未定义，所以也就没有值了")]),t._v(" "),a("p",[t._v("undefined和null的区别:null和undefined的"),a("code",[t._v("值相等，但类型不等")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"_6-symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-symbol"}},[t._v("#")]),t._v(" 6.symbol")]),t._v(" "),a("h2",{attrs:{id:"_7-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-object"}},[t._v("#")]),t._v(" 7.object")]),t._v(" "),a("h3",{attrs:{id:"创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 通过“构造函数”创建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 通过“字面量”创建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"包含-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包含-2"}},[t._v("#")]),t._v(" 包含")]),t._v(" "),a("blockquote",[a("p",[t._v("{...} [...] /^$/ data Math\n普通对象，数组对象，正则对象，日期对象，数学函数对象")])]),t._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("p",[t._v("用键值对来描述一个对象的特征，每一个对象都是综合体，存在零到多组键值对\n{key:value,...}每组键值对都是key:value的格式，多组键值对用逗号分隔\nkey不能是引用数据类型，value可以是任何的数据类型。")]),t._v(" "),a("p",[t._v("JavaScript 对象是变量的容器。是拥有属性和方法的数据。")]),t._v(" "),a("p",[t._v("对象的方法定义了一个函数，并作为对象的属性存储。")]),t._v(" "),a("p",[t._v("对象方法通过添加 () 调用 (作为一个函数)。")]),t._v(" "),a("p",[t._v("对象的键（ key ）也可以是多词属性，但必须加引号，使用的时候，必须使用方括号（ [] ）读取：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'leo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my interest"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coding"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"football"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cycling"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nuser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my interest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["coding", "football", "cycling"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my interest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("也可以在方括号中使用变量，来获取属性值：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"leo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok")]),t._v("\nuser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "leo"')]),t._v("\nuser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pingan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error")]),t._v("\nuser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"键值对的增删改查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键值对的增删改查"}},[t._v("#")]),t._v(" 键值对的增删改查")]),t._v(" "),a("p",[t._v("1.获取\n获取值\n1.对象.属性名 此方法属性名不能是数字\n2.对象[属性名] 此方法属性名要是值而不是变量，它会把变量储存的值当做对象的属性名进行操作\n如果指定的属性不存在，获取到的属性值将是undefined，不会报错！\n获取属性名\nObject.key(对象)----返回当前对象所有属性名的数组\n2.新增|修改\n对象的属性名不允许重复哦\n之前没有则为新增\n之前有则为修改对应的属性值\n3.删除\n假删除 object.name=null 对象的属性还在但属性值为空\n真删除 delete obj.name 对象的属性没了")]),t._v(" "),a("p",[t._v("引用数据类型不能作为属性名,\n对象属性名不是字符串就会调用toString转字符串，如果不能转报错\nObject的toString是[Object object]")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n是对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//m是数组对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//=>obj[{X:100}] 但是对象不能作为属性名，会自动将其转换为字符串 =>{"[object Object]":"张三"}')]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//=>obj[[100,200]]=>{"100，200":"李四"}')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//{[object Object]: "张三", 100,200: "李四"}')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"数组转成字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组转成字符串"}},[t._v("#")]),t._v(" 数组转成字符串")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://c.biancheng.net/view/5673.html",target:"_blank",rel:"https://docs.5102it.cn/CanvasBoard.html"}},[t._v("参考"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"tostring-将数组转换成一个字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring-将数组转换成一个字符串"}},[t._v("#")]),t._v(" toString()\t将数组转换成一个字符串")]),t._v(" "),a("p",[t._v("能够把每个元素转换为字符串，然后以逗号连接输出显示。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把数组转换为字符串")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回字符串“1,2,3,4,5,6,7,8,9,0”")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回字符串string，说明是字符串类型")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"tolocalstring-把数组转换成本地约定的字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tolocalstring-把数组转换成本地约定的字符串"}},[t._v("#")]),t._v(" toLocalString()把数组转换成本地约定的字符串")]),t._v(" "),a("h4",{attrs:{id:"join-将数组元素连接起来以构建一个字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join-将数组元素连接起来以构建一个字符串"}},[t._v("#")]),t._v(" join()将数组元素连接起来以构建一个字符串")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=="')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定分隔符")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回字符串“1==2==3==4==5”")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("split() 方法是 String 对象方法，与 join() 方法操作正好相反。该方法可以指定两个参数，第 1 个参数为分隔符，指定从哪儿进行分隔的标记；第 2 个参数指定要返回数组的长度。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1==2== 3==4 ==5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=="')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("event.target 指向触发控件")])]),t._v(" "),a("li",[a("p",[t._v("call 和 apply 差别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("构造函数（对象）.call（对象），call 参数为多个参数，apply 参数为数组，立刻执行，可改变 this")])]),t._v(" "),a("li",[a("p",[t._v("bind 返回新函数，其他类似 call，不立即执行，bind 也可以传上级 this")])]),t._v(" "),a("li",[a("p",[t._v("对象独立空间不释放")])])])]),t._v(" "),a("li",[a("p",[t._v("delete 对象.属性，删除属性")])]),t._v(" "),a("li",[a("p",[t._v("对象中同名属性覆盖")])]),t._v(" "),a("li",[a("p",[t._v("结构赋值{name，age}=object，传参也可以{random}=Math，获取 random 函数们获取一部分，严格模式要声明，数组要对应位置取")])]),t._v(" "),a("li",[a("p",[t._v("属性和值一样可以写一个")])]),t._v(" "),a("li",[a("p",[t._v("{name，age：{对象}}={name：hh，age：{对象}}")])]),t._v(" "),a("li",[a("p",[t._v("没值可以使用默认值")])]),t._v(" "),a("li",[a("p",[t._v("hasOwnProperty 查看当前自己是否有对应属性，用 in 可以检查到父级属性")])]),t._v(" "),a("li",[a("p",[t._v("setPrototypeOf（a，b）设置 a 的原型 b，父级")])]),t._v(" "),a("li",[a("p",[t._v("object.assign（对象 1，对象 2）合并对象属性生成新对象")])]),t._v(" "),a("li",[a("p",[t._v("对象的对象赋值是引用，赋值为对象深拷贝")])]),t._v(" "),a("li",[a("p",[t._v("复制对象（一样新对象）浅拷贝")])]),t._v(" "),a("li",[a("p",[t._v("拷贝时属性值为数组也要判断")])]),t._v(" "),a("li",[a("p",[t._v("工厂函数（类似构造）")])]),t._v(" "),a("li",[a("p",[t._v("构造函数首字母大写，构造用 new，系统自动返回 this")])]),t._v(" "),a("li",[a("p",[t._v("严格模式下 window 的 this 会 undefined")])]),t._v(" "),a("li",[a("p",[t._v("构造函数内 let 声明对象，定义对象属性和值，其他属性访问内部属性值，外部无法修改")])]),t._v(" "),a("li",[a("p",[t._v("getOwnPropertyDescriptor()查看对象属性特征")])]),t._v(" "),a("li",[a("p",[t._v("defineProperty 新增属性格特征")])]),t._v(" "),a("li",[a("p",[t._v("writable 是否可写、enumerable 是否可遍历、configurable 是否可删除、value 值、严格模式会报错")])]),t._v(" "),a("li",[a("p",[t._v("preventExtensions 保护对象不能添加属性")])]),t._v(" "),a("li",[a("p",[t._v("seal 封闭对象，禁止操作")])]),t._v(" "),a("li",[a("p",[t._v("isSealed 判断对象封闭状态")])]),t._v(" "),a("li",[a("p",[t._v("冻结 freeze 都不能操作、isFrozen 判断冻结")])]),t._v(" "),a("li",[a("p",[t._v("关键字 set 属性名（参数）{}，设置访问器，控制存入数据的范围")])]),t._v(" "),a("li",[a("p",[t._v("关键字 get 属性名（）{}，设置访问器，获取时指定返回数据")])]),t._v(" "),a("li",[a("p",[t._v("可以设置伪造属性，设置读取返回数据可以是函数，不一定是属性")])]),t._v(" "),a("li",[a("p",[t._v("批量设置属性，还是伪造属性通过函数控制数据的读写操作，访问器优先级高于普通属性")])]),t._v(" "),a("li",[a("p",[t._v("new Proxy（）代理对象，通过代理来规定访问数据，也能代理数组")])]),t._v(" "),a("li",[a("p",[t._v("JSON.stringify（第二参数保留属性，第三参数格式）转字符串 JSON.parse 转 json 对象，数组也可以转 json 字符串，toJSON 自定义方法序列号对象，可自定义回调函数")])]),t._v(" "),a("li",[a("p",[t._v("原型（父亲）类似继承")])]),t._v(" "),a("li",[a("p",[t._v("Object.create（父亲（原型），属性）创造对象")])]),t._v(" "),a("li",[a("p",[t._v("方法放在原型，不要放在构造函数里")])]),t._v(" "),a("li",[a("p",[t._v("不能乱添加原型方法")])]),t._v(" "),a("li",[a("p",[t._v("对象.__proto__设置原型，也可以查看（非标准）如果右边是对象可以赋值其他无效，访问器")])]),t._v(" "),a("li",[a("p",[t._v("对象原型Object.prototype的Object.prototype.__proto__指向null\n"),a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200804172455.png",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("用 set/getPrototypeOf（）创建查看原型")])]),t._v(" "),a("li",[a("p",[t._v("原型继承不是改变构造函数的原型")])]),t._v(" "),a("li",[a("p",[t._v("class 声明类")])]),t._v(" "),a("li",[a("p",[t._v("类中声明发放不需要逗号")])]),t._v(" "),a("li",[a("p",[t._v("constructor（）函数，自执行（构造函数）")])]),t._v(" "),a("li",[a("p",[t._v("类就是构造函数，语法糖")])]),t._v(" "),a("li",[a("p",[t._v("类中定义的方法自动放在原型中")])]),t._v(" "),a("li",[a("p",[t._v("class 自动设置原型方法不可遍历")])]),t._v(" "),a("li",[a("p",[t._v("类中声明的方法默认是严格模式")])]),t._v(" "),a("li",[a("p",[t._v("分配给构造函数的属性是静态属性")])]),t._v(" "),a("li",[a("p",[t._v("给类设置静态属性，给所有对象设置默认属性，只保存一份在类中")])]),t._v(" "),a("li",[a("p",[t._v("方法放原型，属性用构造函数生成自定义属性")])]),t._v(" "),a("li",[a("p",[t._v("静态方法，定义在构造函数中的方法，在构造函数中，也可以定义在对象原型中（定义在构造函数的原型中的方法，静态方法）")])]),t._v(" "),a("li",[a("p",[t._v("class 中用 static 声明的方法是静态方法")])]),t._v(" "),a("li",[a("p",[t._v("通过构造函数的方法创建对象用静态方法，对多个对象操作")])]),t._v(" "),a("li",[a("p",[t._v("访问器，对数据获取设置都经过函数处理")])]),t._v(" "),a("li",[a("p",[t._v("属性保护_开头的属性，规定为私有属性")])]),t._v(" "),a("li",[a("p",[t._v("使用[Symbol 类型]设置属性名为私有，子类可以使用外部不可使用，this[Symbol].属性名")])]),t._v(" "),a("li",[a("p",[t._v("extends 继承关键字")])]),t._v(" "),a("li",[a("p",[t._v("使用 WeakMap.set 保护属性 get 获取，通过 WeakMap 保存属性")])]),t._v(" "),a("li",[a("p",[t._v("#属性名，设置为私有属性只能自己访问")])]),t._v(" "),a("li",[a("p",[t._v("super（）父级构造函数，原型攀升")])]),t._v(" "),a("li",[a("p",[t._v("类的方法在原型上")])]),t._v(" "),a("li",[a("p",[t._v("声明了 constructor 要用 super，且要写在 this 前，没声明默认")])]),t._v(" "),a("li",[a("p",[t._v("重写方法，直接写同名方法优先使用子方法")])]),t._v(" "),a("li",[a("p",[t._v("静态方法不能有对象数据，公用方法")])]),t._v(" "),a("li",[a("p",[t._v("函数也是对象")])]),t._v(" "),a("li",[a("p",[t._v("排序 sort（function（a，b）{return b-a}）（1 大到小）")])]),t._v(" "),a("li",[a("p",[t._v("arr.forEach（function（item，index，arr）{}）")])]),t._v(" "),a("li",[a("p",[t._v("迭代器：arr.kes(),arr.value(),返回 key/value，bool（是否已迭代）")])]),t._v(" "),a("li",[a("p",[t._v("迭代器.next()下一个")])]),t._v(" "),a("li",[a("p",[t._v("arr.entries（）是 key 和 value 的综合")])]),t._v(" "),a("li",[a("p",[t._v("arr.every（function（item，index，arr）{}），返回全为真才为真，可同时判断数组值")])]),t._v(" "),a("li",[a("p",[t._v("arr.some（function（item，index，arr）{}），一个为真就为真")])]),t._v(" "),a("li",[a("p",[t._v("arr.filter（function（item，index，arr）{}）返回真则返回原数组，假不保留")])]),t._v(" "),a("li",[a("p",[t._v("arr.map（function（item，index，arr）{}），返回什么新数组值就为什么")])]),t._v(" "),a("li",[a("p",[t._v("新增 arr.reduce（function（pre，value，index，arr）{}，pre 的初始值），pre 为每上次遍历返回值，最后在返回，可做筛选")])]),t._v(" "),a("li",[a("p",[t._v("find（function（item）{}）遍历每个元素")])]),t._v(" "),a("li",[a("p",[t._v("比对地址查找，不能直接查找对象，只能遍历属性对比属性值")])]),t._v(" "),a("li",[a("p",[t._v("apply 指定形式传参")])]),t._v(" "),a("li",[a("p",[t._v("抽象为类，具体为对象")])]),t._v(" "),a("li",[a("p",[t._v("对象的特征为属性，行为为方法（值 函数），键值对，值为数据和函数")])]),t._v(" "),a("li",[a("p",[t._v("声明空对象 var obj={}，字面量声明")])]),t._v(" "),a("li",[a("p",[t._v("var obj={age:12,height:140,play:function(){}},值不为函数则为属性，值为函数则为方法")])]),t._v(" "),a("li",[a("p",[t._v("实例化方式声明对象（内置构造函数） var obj=new Object（）")])]),t._v(" "),a("li",[a("p",[t._v("自定义构造函数 function fun（）{}；var f=new fun（）；")])]),t._v(" "),a("li",[a("p",[t._v("获取对象属性或方法：对象.属性名；obj.age、obj.play()调用")])]),t._v(" "),a("li",[a("p",[t._v("this 指向")]),t._v(" "),a("div",{staticClass:"language-js this line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在方法中this指向这个方法所在的对象obj")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" f（）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//普通函数也有this.a（undefined），不过this指向对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this指向全局对象，关键在this指向哪个对象，this向前寻找最近对象，同冒泡寻找")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//**this被谁调用就指向谁（对象），并未在谁下面而是被谁调用**")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"遍历对象和删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历对象和删除"}},[t._v("#")]),t._v(" 遍历对象和删除")]),t._v(" "),a("p",[t._v("for in；for（键 in 对象）{console.log(对象.键)}；")]),t._v(" "),a("p",[t._v("for in 可遍历对象和数组")]),t._v(" "),a("p",[t._v("删除属性：delete 对象.属性名")]),t._v(" "),a("h3",{attrs:{id:"包装对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装对象"}},[t._v("#")]),t._v(" 包装对象")]),t._v(" "),a("p",[t._v("原始类型：数值、字符串、布尔")]),t._v(" "),a("p",[t._v("原始类型的数据在一定条件下可自动转换为对象，此为包装对象")]),t._v(" "),a("p",[t._v("原始值可用自动当作对象调用，可用调用属性和方法，包装对象使用完会立即销毁")]),t._v(" "),a("p",[t._v("var a='aaa'；a.length"),a("code",[t._v("（调用 length 时会创建一个对象用完立即销毁）")])]),t._v(" "),a("h3",{attrs:{id:"标准库对象（内置对象）math、date、array、string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标准库对象（内置对象）math、date、array、string"}},[t._v("#")]),t._v(" 标准库对象（内置对象）Math、Date、Array、String")]),t._v(" "),a("p",[t._v("time() timeEnd()计算经过时间")]),t._v(" "),a("p",[t._v("console.table 表格形式展示")]),t._v(" "),a("h3",{attrs:{id:"math-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math-对象"}},[t._v("#")]),t._v(" Math 对象")]),t._v(" "),a("p",[t._v(".abs()绝对值")]),t._v(" "),a("p",[t._v(".random()返回随机数[0-1);取指定范围随机数：random()*(范围最大值-范围最小值）+范围最小值；.float(随机数) 取整")]),t._v(" "),a("p",[t._v(".float()向下取整")]),t._v(" "),a("p",[t._v(".ceil()向上取整")]),t._v(" "),a("h3",{attrs:{id:"时间对象-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间对象-date"}},[t._v("#")]),t._v(" 时间对象 Date")]),t._v(" "),a("p",[t._v("var da=new Date（）；先获取对象")]),t._v(" "),a("p",[t._v("da.now();返回时间戳毫秒数 Date.now（）")]),t._v(" "),a("p",[t._v("da.getHours()、da.getDate（）获取时间是计算机本机时间，月份从 0 开始到 11")]),t._v(" "),a("h3",{attrs:{id:"数组对象方法-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组对象方法-array"}},[t._v("#")]),t._v(" 数组对象方法 Array")]),t._v(" "),a("p",[t._v("数组是特殊的对象")]),t._v(" "),a("p",[t._v("它的属性名是数字，数字从0开始逐增----这种数字属性名叫做“索引”")]),t._v(" "),a("p",[t._v("默认有一个length属性存储数组的长度")]),t._v(" "),a("p",[t._v("var arr=[1,2,3];获取长度 arr.length")]),t._v(" "),a("p",[t._v("插入值 arr.push(4);插入最后面，改变数组")]),t._v(" "),a("p",[t._v("删除值 arr.pop();自动删除最后一个值")]),t._v(" "),a("p",[t._v("删除数组 返回新删除后的数组不改变之前数组 var arr1=arr.slice(2,5)不包括 5")]),t._v(" "),a("p",[t._v("arr.concat(数组 2)，链接数组不改变之前数组，返回新数组")]),t._v(" "),a("p",[t._v("arr.join(分隔符)，返回新数组用分隔符分开各值")]),t._v(" "),a("h4",{attrs:{id:"数组声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组声明"}},[t._v("#")]),t._v(" 数组声明")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数组属于引用类型，赋值给不同变量属于同一地址，影响改变")])]),t._v(" "),a("li",[a("p",[t._v("var arr=['a','b']")])]),t._v(" "),a("li",[a("p",[t._v("var arr=[],数组.length 获取数组长度")])]),t._v(" "),a("li",[a("p",[t._v("多维数组 arr=[1,2,[5,'5']],可为多类型")])]),t._v(" "),a("li",[a("p",[t._v("数组通过索引来取值 arr[2][1]=='5';")])]),t._v(" "),a("li",[a("p",[t._v("创建数组 new 只填一个值为长度")])]),t._v(" "),a("li",[a("p",[t._v("新版 Arrat.of(6),为赋值不同 new")])]),t._v(" "),a("li",[a("p",[t._v("数组也是对象，instanceof 判断原型链可以判断数组 Array/Object")])]),t._v(" "),a("li",[a("p",[t._v("数组可存储对象")])]),t._v(" "),a("li",[a("p",[t._v("没赋值的数组值为 empty（undefined），长度不变")])])]),t._v(" "),a("h4",{attrs:{id:"数组操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组操作"}},[t._v("#")]),t._v(" 数组操作")]),t._v(" "),a("ul",[a("li",[t._v("lastIndexOf 从后开始查找，新版 includes（元素），返回 bool，第二参数为查找起始位置")]),t._v(" "),a("li",[t._v("copyWithin(到位置，开始，结束元素)")]),t._v(" "),a("li",[t._v("pop 返回删除的值，unshift 前入，shift 前删除")]),t._v(" "),a("li",[t._v("填充元素 arr.fill(值，位置 1，位置 2)")]),t._v(" "),a("li",[t._v("slice（开始，结束），截取数组生成新数组不填参数重新生成新数组")]),t._v(" "),a("li",[t._v("splice（开始，截取几个，替换值）改变原数组，也可增加删除")]),t._v(" "),a("li",[t._v("清除数组至[]（指向空内存，原内存还在）或者 length=0（改变原数组值）")]),t._v(" "),a("li",[t._v("arr.concat（arr1）连接数组==arr=[...arr,...arr1]")]),t._v(" "),a("li",[t._v("arr.push（...arr1）合并，改变数组值，返回数组长度")]),t._v(" "),a("li",[t._v("str.split（）拆分成数组")]),t._v(" "),a("li",[t._v("Array.from 可转数组，有长度能转，dom 获取也可转，第二参数可操作元素")]),t._v(" "),a("li",[t._v("展开语法：arr=[...arr1,...arr2]合并数组，...arr 转数组")]),t._v(" "),a("li",[t._v("slice 截取相应位置到之后字符串同 substring")]),t._v(" "),a("li",[t._v("substr 起始位置到指定个数")]),t._v(" "),a("li",[t._v("trim（）去字符串 2 端空格")])]),t._v(" "),a("h4",{attrs:{id:"遍历数组用-for-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历数组用-for-循环"}},[t._v("#")]),t._v(" 遍历数组用 for 循环")]),t._v(" "),a("div",{staticClass:"language-js 遍历数组 line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"字符串对象-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串对象-string"}},[t._v("#")]),t._v(" 字符串对象 String")]),t._v(" "),a("p",[t._v("搜索字符串中指定字符：s='gfdgf1';s.indexOf('f')==1")]),t._v(" "),a("p",[t._v("s.substr(2,2);从第 2 个开始取 2 个字符=='dg'")]),t._v(" "),a("p",[t._v("全部转小写：var str=s.toLowerCase();返回新串不改变原串")]),t._v(" "),a("p",[t._v("全部转大写：var str=s.toUpperCase();返回新串不改变原串")]),t._v(" "),a("p",[t._v("替换字符串：s.replace(原字符,替换后字符),返回新串")]),t._v(" "),a("p",[t._v("trim（）删除前后空格")]),t._v(" "),a("h3",{attrs:{id:"moment-js-时间库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#moment-js-时间库"}},[t._v("#")]),t._v(" Moment.js 时间库")]),t._v(" "),a("h3",{attrs:{id:"valueof-取值，tofixed-保留小数位数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#valueof-取值，tofixed-保留小数位数"}},[t._v("#")]),t._v(" valueOf 取值，toFixed 保留小数位数")]),t._v(" "),a("h3",{attrs:{id:"对象检测方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象检测方法"}},[t._v("#")]),t._v(" 对象检测方法")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("obj.hasOwnProperty(prop)返回boolean")]),t._v("，prop：要检测的属性的 String 字符串形式表示的名称，或者 Symbol。指示对象自身属性中是否具有指定的属性（也就是，是否有指定的键）")]),t._v(" "),a("li",[a("strong",[t._v("prototypeObj.isPrototypeOf(object)返回boolean")]),t._v("，测试引用对象是否存在于参数对象的原型链，与instanceof不同，object instanceof AFunction中，object 的原型链是针对 AFunction.prototype 进行检查的")]),t._v(" "),a("li",[a("strong",[t._v("obj.propertyIsEnumerable(prop)返回boolean")]),t._v("，检测对象指定的属性是否可枚举")]),t._v(" "),a("li",[a("strong",[t._v("Object.is(value1, value2)返回boolean")]),t._v("，判断两个值是否是相同的值，不会隐式转换")]),t._v(" "),a("li",[a("strong",[t._v("Object.isExtensible(obj)返回boolean")]),t._v("，判断一个对象是否是可扩展的（是否可以在它上面添加新的属性）")]),t._v(" "),a("li",[a("strong",[t._v("Object.isFrozen(obj)返回boolean")]),t._v("，判断一个对象是否被冻结")]),t._v(" "),a("li",[a("strong",[t._v("Object.isSealed(obj)返回boolean")]),t._v("，判断对象是否被密封(不可扩展 ，且所有自身属性都不可配置且因此不可删除（但不一定是不可写）的对象")])]),t._v(" "),a("h3",{attrs:{id:"对象属性查看方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象属性查看方法"}},[t._v("#")]),t._v(" 对象属性查看方法")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Object.values(obj)返回对象的所有可枚举属性值的数组")]),t._v("，值的顺序与使用for...in循环的顺序相同 ( 区别在于 for-in 循环枚举原型链中的属性 )")]),t._v(" "),a("li",[a("strong",[t._v("Object.keys(obj)返回对的所有可枚举属性的字符串数组")]),t._v("，排列顺序和 for...in 循环遍历时顺序一致")]),t._v(" "),a("li",[a("strong",[t._v("Object.entries(obj)返回给定对象自身可枚举属性的键值对数组")]),t._v("，其排列与 for...in 循环遍历时顺序一致")]),t._v(" "),a("li",[a("strong",[t._v("Object.fromEntries(iterable)返回一个由该迭代对象条目提供对应属性的新对象")]),t._v("，把键值对列表转换为一个对象，参数：可迭代对象，类似 Array 、Map历时返回的顺序一致（区别于 for-in 循环还会枚举原型链中的属性），浅拷贝")]),t._v(" "),a("li",[a("strong",[t._v("obj.toString()返回表示该对象的字符串")]),t._v("，[object Object]")]),t._v(" "),a("li",[a("strong",[t._v("object.valueOf()返回该对象的原始值")])]),t._v(" "),a("li",[a("strong",[t._v("obj.toLocaleString()返回对象的字符串表示")]),t._v("，方法被用于派生对象为了特定语言环境的目的（locale-specific purposes）而重载使用")]),t._v(" "),a("li",[a("strong",[t._v("Object.getOwnPropertyDescriptor(obj, prop)返回指定属性描述对象")]),t._v("，返回指定对象上的一个自有属性对应的属性描述符，prop目标对象的属性名")]),t._v(" "),a("li",[a("strong",[t._v("Object.getOwnPropertyDescriptors(obj)返回对象的所有自身属性描述符")]),t._v("，用来获取一个对象的所有自身属性的描述符")]),t._v(" "),a("li",[a("strong",[t._v("Object.getOwnPropertyNames(obj)返回对象的所有属性名字符串组成的数组")]),t._v("，返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括Symbol值作为名称的属性）组成的数组")]),t._v(" "),a("li",[a("strong",[t._v("Object.getOwnPropertySymbols(obj)返回对象所有Symbol属性的数组")])]),t._v(" "),a("li",[a("strong",[t._v("Object.getPrototypeOf(object)返回对象的原型")]),t._v("，返回指定对象的原型（内部[[Prototype]]属性的值），没有则null")])]),t._v(" "),a("h3",{attrs:{id:"对象属性操作方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象属性操作方法"}},[t._v("#")]),t._v(" 对象属性操作方法")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Object.assign(target, ...sources)返回目标对象")]),t._v("，用于将所有可枚举属性的值从一个或多个源对象复制到目标对象。它将返回目标对象，浅拷贝")]),t._v(" "),a("li",[a("strong",[t._v("Object.create(proto[,propertiesObject])返回新对象，带有指定原型对象和属性")]),t._v("，参数1：新对象的原型，参数2：要定义其可枚举属性或修改的属性描述符的对象")]),t._v(" "),a("li",[a("strong",[t._v("Object.setPrototypeOf(obj, prototype)返回这个对象")]),t._v("，设置一个指定的对象的原型 ( 即, 内部[[Prototype]]属性）到另一个对象或  null")]),t._v(" "),a("li",[a("strong",[t._v("Object.preventExtensions(obj)返回不可扩展对象")]),t._v("，让对象变的不可扩展，也就是永远不能再添加新属性")]),t._v(" "),a("li",[a("strong",[t._v("Object.freeze(obj)返回冻结的对象")]),t._v("，冻结一个对象。一个被冻结的对象再也不能被修改")]),t._v(" "),a("li",[a("strong",[t._v("Object.seal(obj)返回被密封的对象")]),t._v("，阻止添加新属性并将所有现有属性标记为不可配置。当前属性的值只要原来是可写的就可以改变")]),t._v(" "),a("li",[a("strong",[t._v("Object.defineProperties(obj, props)返回参数对象本身")]),t._v("，在一个对象上定义新的属性或修改现有属性，并返回该对象，参数2：要定义其可枚举属性或修改的属性描述符的对象")]),t._v(" "),a("li",[a("strong",[t._v("Object.defineProperty(obj, prop, descriptor)返回参数对象")]),t._v("，参数2：定义或修改的属性名，参数3：对应的属性描述符。直接在一个对象上定义一个新属性，或者修改一个对象的现有属性")])]),t._v(" "),a("h3",{attrs:{id:"对象原型方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象原型方法"}},[t._v("#")]),t._v(" 对象原型方法")]),t._v(" "),a("ol",[a("li",[t._v("obj.hasOwnProperty()")]),t._v(" "),a("li",[t._v("prototypeObj.isPrototypeOf()")]),t._v(" "),a("li",[t._v("obj.propertyIsEnumerable()")]),t._v(" "),a("li",[t._v("obj.toLocaleString()")]),t._v(" "),a("li",[t._v("obj.toString()")]),t._v(" "),a("li",[t._v("object.valueOf()")])]),t._v(" "),a("h3",{attrs:{id:"数组增删改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组增删改"}},[t._v("#")]),t._v(" 数组增删改")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Array.of(...items)返回新数组")]),t._v(" 将参数中所有值作为元素形成数组")]),t._v(" "),a("li",[t._v("**arr.push()**数组尾部添加，**arr.pop()**尾部取出，**arr.shift()**首端取出，**arr.unshift()**首端插入")]),t._v(" "),a("li",[a("strong",[t._v("arr.splice(pos,deleteCount,...item)返回被修改的元素，会改变原数组")]),t._v("从pos开始删除deleteCount个元素，并在当前位置插入items")]),t._v(" "),a("li",[a("strong",[t._v("arr.slice(start,end)返回新数组，浅拷贝")]),t._v("，将start到end(不包括end)的元素复制进去，并返回")]),t._v(" "),a("li",[a("strong",[t._v("arr.concat(...items)返回新数组")]),t._v("，复制当前数组的所有元素，并添加items的元素")]),t._v(" "),a("li",[a("strong",[t._v("arr.copyWithin(pos[, start[, end]])浅拷贝，返回改变后的数组")]),t._v("，复制从start到end(不包括end)的元素，到pos开始的索引")]),t._v(" "),a("li",[a("strong",[t._v("arr.fill(value[, start[, end]])返回修改后的值")]),t._v("，从start到end默认length，填充val")])]),t._v(" "),a("h3",{attrs:{id:"数组搜索元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组搜索元素"}},[t._v("#")]),t._v(" 数组搜索元素")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("**arr.indexOf(item[,pos])**从pos开始搜索item，搜索到返回索引，没找到返回-1。"),a("strong",[t._v("arr.lastIndexOf(item[,pos])")]),t._v(",位置从后面开始计算")]),t._v(" "),a("li",[t._v("**arr.includes(val)**如果数组有val，返回true，否则false")]),t._v(" "),a("li",[t._v("**arr.find(callback(element[, index[, array]])[, thisArg])**通过func过滤元素，返回使func为true的第一个值。")]),t._v(" "),a("li",[t._v("**arr.findIndex(callback(element[, index[, array]])[, thisArg])**类似find，返回索引，不是值,没找到返回-1")]),t._v(" "),a("li",[t._v("**arr.filter(callback(element[, index[, array]])[, thisArg])**返回使func为true的全部值")])]),t._v(" "),a("h3",{attrs:{id:"数组遍历元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组遍历元素"}},[t._v("#")]),t._v(" 数组遍历元素")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("**arr.forEach(callback(currentValue [, index [, array]])[, thisArg])**对每个元素调用func，不返回任何值")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("arr.entries/keys/values()返回新的数组迭代器对象")]),t._v("，该对象包含数组中每个索引的键/值对[key,val]/[key]/[values]，可用next()遍历，value()查看值")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("arr.every(callback(element[,index[,array]])[, thisArg]))返回boolean")]),t._v("，callback(element[,index[,array]])为测试数组元素的函数,el为测试当前值，index为当前索引，array为调用的数组本身。如果每次回调函数都返回true则函数返回true，否则false")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("arr.some(callback(element[, index[, array]])[, thisArg])返回boolean")]),t._v("，类every，只要一个通过测试则返回true")])])]),t._v(" "),a("h3",{attrs:{id:"转换数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换数组"}},[t._v("#")]),t._v(" 转换数组")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("**arr.map(function callback(currentValue[, index[, array]])[, thisArg])**根据调用func的返回结果创建新数组")])]),t._v(" "),a("li",[a("p",[t._v("**arr.sort([compareFunction])**对数组进行原位（in-place）排序，然后返回，func参数arg1：第一个比较的元素，arg2：第二个比较的元素")])]),t._v(" "),a("li",[a("p",[t._v("**arr.reverse()**原位反转数组，然后返回")])]),t._v(" "),a("li",[a("p",[t._v("**arr.join([separator])**将数组转换为指定分隔符连成的字符串并返回，默认用','")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("arr.reduce/reducnRight(callback(accumulator, currentValue[, index[, array]])[, initialValue])返回函数累计处理的结果")]),t._v("通过对每个元素调用func，计算数组是的单个值，并在调用之间传递中间结果。accum累计器累计回调的返回值; 它是上一次调用回调时返回的累积值，或initialValue(初始accum的值，如果没有则用数组第一个元素)。")])]),t._v(" "),a("li",[a("p",[t._v("**Array.isArray(arr)**检查arr是否为数组")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Array.from(arrayLike[,mapFn[,this.Arg]]) 返回新数组,浅拷贝")]),t._v("，将类数组对象或可迭代对象转化为数组,第二参数：用于对每个元素进行处理，放入数组的是处理后的元素。第三参数：用于指定第二参数执行时的this对象")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("arr.flat([depth])返回新数组")]),t._v("，depth维数组转一维")])]),t._v(" "),a("li",[a("p",[t._v("**arr.flatMap(function callback(currentValue[, index[, array]])[, thisArg]))**对flat的转换有回调函数的处理")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("arr.toString(function callback(currentValue[, index[, array]])[, thisArg])返回字符串")]),t._v("，数组转字符串")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("arr.toLocaleString([locales[,options]])返回数组元素的字符串")]),t._v("，locales为带有BCp 47语言标记的字符串或者字符串数组，options为可配置对象，对于数字 Number.prototype.toLocaleString()，对于日期Date.prototype.toLocaleString()")])])]),t._v(" "),a("h3",{attrs:{id:"数组属性方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组属性方法"}},[t._v("#")]),t._v(" 数组属性方法")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("arr[Symbol.iterator]()默认与values()的返回值相同")])]),t._v(" "),a("li",[a("strong",[t._v("Array[Symbol.species]返回数组的构造函数")])])]),t._v(" "),a("h3",{attrs:{id:"array构造函数的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array构造函数的方法"}},[t._v("#")]),t._v(" Array构造函数的方法")]),t._v(" "),a("ol",[a("li",[t._v("Array.of(...items)")]),t._v(" "),a("li",[t._v("Array.isArray(arr)")]),t._v(" "),a("li",[t._v("Array.from(arrayLike[,mapFn[,this.Arg]])")]),t._v(" "),a("li",[t._v("Array[Symbol.species]")])]),t._v(" "),a("h3",{attrs:{id:"会影响原数组本身的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#会影响原数组本身的方法"}},[t._v("#")]),t._v(" 会影响原数组本身的方法")]),t._v(" "),a("ol",[a("li",[t._v("pop()")]),t._v(" "),a("li",[t._v("push()")]),t._v(" "),a("li",[t._v("shift()")]),t._v(" "),a("li",[t._v("unshift()")]),t._v(" "),a("li",[t._v("sort()")]),t._v(" "),a("li",[t._v("reverse()")]),t._v(" "),a("li",[t._v("splice()")]),t._v(" "),a("li",[t._v("copyWithin()")]),t._v(" "),a("li",[t._v("arr.fill()")])]),t._v(" "),a("h2",{attrs:{id:"_8-bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-bigint"}},[t._v("#")]),t._v(" 8.bigInt")]),t._v(" "),a("p",[t._v("用于任意长度的整数。")]),t._v(" "),a("h2",{attrs:{id:"function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[t._v("#")]),t._v(" function")]),t._v(" "),a("h3",{attrs:{id:"一些关于数据类型的疑惑解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些关于数据类型的疑惑解释"}},[t._v("#")]),t._v(" 一些关于数据类型的疑惑解释")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.zhihu.com/question/24804474",target:"_blank",rel:"https://docs.5102it.cn/CanvasBoard.html"}},[t._v("知乎--JavaScript 里 Function 也算一种基本类型？"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("函数作为数据类型其实是不对的，虽然typeof(Function())返回function，但typeof只是一个运算符，其返回值并不能作为JS类型系统的依据。")]),t._v(" "),a("p",[t._v("typeof null返回“object”是一个历史错误（JS的发明者Brendan Eich自己也是这样说的），只是因为要保持语言的兼容性而维持至今。")]),t._v(" "),a("h3",{attrs:{id:"什么是函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是函数"}},[t._v("#")]),t._v(" 什么是函数")]),t._v(" "),a("p",[t._v("函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。")]),t._v(" "),a("p",[t._v("函数就是包裹在花括号中的代码块，前面使用了关键词 function：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("functionname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("在调用函数时，可以向其传递值，这些值被称为参数。这些参数可以在函数中使用。")]),t._v(" "),a("p",[t._v("可以发送任意多的参数，由逗号分隔：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("argument2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("声明函数时，把参数作为变量来声明：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("var1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("var2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n代码\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("变量和参数必须以一致的顺序出现。第一个变量就是第一个被传递的参数的给定的值，以此类推。")]),t._v(" "),a("p",[t._v("通过使用 return 语句就可以实现带有返回值的函数。")]),t._v(" "),a("p",[t._v("在使用 return 语句时，函数会停止执行，并返回指定的值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("在仅仅希望退出函数时 ，也可使用 return 语句。返回值是可选的：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果 a 大于 b，则上面的代码将退出函数，并不会计算 a 和 b 的总和。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h3",{attrs:{id:"箭头函数（新版）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数（新版）"}},[t._v("#")]),t._v(" 箭头函数（新版）")]),t._v(" "),a("p",[t._v("function(参数){} 等价于(参数)=>{}，可少填参数（如果没用到自带 return）")]),t._v(" "),a("p",[t._v("用箭头函数this指向父对象，方法内用function中的this指向window")]),t._v(" "),a("h3",{attrs:{id:"函数作用域和保留"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数作用域和保留"}},[t._v("#")]),t._v(" 函数作用域和保留")]),t._v(" "),a("p",[t._v("全局环境不会被回收，php 超全局")]),t._v(" "),a("p",[t._v("函数内部声明的变量只能函数内使用，运行后清除")]),t._v(" "),a("p",[t._v("函数有被外部使用则保留")]),t._v(" "),a("p",[t._v("全局函数，压入 window 中，let 不会")]),t._v(" "),a("h3",{attrs:{id:"函数声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数声明"}},[t._v("#")]),t._v(" 函数声明")]),t._v(" "),a("p",[t._v("fun=new Function（参数，内容）,通过内置的 JavaScript 函数构造器（Function()）定义。")]),t._v(" "),a("p",[t._v("var 函数名=function（参数）{代码}，表达式声明")]),t._v(" "),a("p",[t._v("function 函数名（参数）{代码}，此为关键字声明")]),t._v(" "),a("h3",{attrs:{id:"立即执行函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#立即执行函数"}},[t._v("#")]),t._v(" 立即执行函数")]),t._v(" "),a("p",[t._v("解决命名冲突使用 立即执行函数")]),t._v(" "),a("p",[t._v("立即执行函数控制作用域（可随意定义变量），防止全局变量污染")]),t._v(" "),a("h3",{attrs:{id:"函数封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数封装"}},[t._v("#")]),t._v(" 函数封装")]),t._v(" "),a("p",[t._v("把具有特定功能的代码封装起来，形成一个独立的实体")]),t._v(" "),a("h3",{attrs:{id:"函数-tap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数-tap"}},[t._v("#")]),t._v(" 函数 tap")]),t._v(" "),a("p",[t._v("调用：函数名（参数）")]),t._v(" "),a("p",[t._v("函数返回值,没 return 返回为 undefined，有 return 没写返回值也返回 undefined")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形参")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  代码\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 返回值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" rr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("实参"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//rr==返回值")]),t._v("\n \n        Copied"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("函数名和变量名相同，则函数声明会替换变量声明，如果谁先赋值则为谁")]),t._v(" "),a("h3",{attrs:{id:"匿名、闭包、自调用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名、闭包、自调用函数"}},[t._v("#")]),t._v(" 匿名、闭包、自调用函数")]),t._v(" "),a("p",[t._v("匿名函数，没有函数名 var fun=function(){}，定义的变量即为函数本身 fun（）")]),t._v(" "),a("p",[t._v("自调用函数(function(){})()定义声明完直接执行，立即执行函数，自调用匿名函数，防止全局变量的污染，封装一个局部作用域")]),t._v(" "),a("p",[t._v("函数也可当参数使用，函数也是一种数据类型，对象（函数、数组），回调")]),t._v(" "),a("p",[t._v("return 可返回一个函数，返回一个内部定义的函数，闭包")]),t._v(" "),a("h2",{attrs:{id:"_3-1-应用拓展-相互转换规则、堆栈内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-应用拓展-相互转换规则、堆栈内存"}},[t._v("#")]),t._v(" 3.1 应用拓展--相互转换规则、堆栈内存")]),t._v(" "),a("h3",{attrs:{id:"_1-条件判断里的相互转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-条件判断里的相互转换规则"}},[t._v("#")]),t._v(" 1.条件判断里的相互转换规则")]),t._v(" "),a("p",[t._v("数字==字符串 字符串转数字，再比较")]),t._v(" "),a("p",[t._v("数字==布尔 布尔转数字")]),t._v(" "),a("p",[t._v("字符串==布尔 两者都转数字")]),t._v(" "),a("p",[t._v("对象==数字 对象转数字")]),t._v(" "),a("p",[t._v("对象==字符串 对象转字符串")]),t._v(" "),a("p",[t._v("对象==布尔 两者转数字")]),t._v(" "),a("p",[t._v("对象==对象 主要看空间地址 空间地址相同则true，反之false")]),t._v(" "),a("p",[t._v("规律： 处理字符串和对象比较时，要把对象转为字符串；其余都先转为数字类型再比较")]),t._v(" "),a("p",[t._v("特殊："),a("br"),t._v("\nNaN和其他值永不相等"),a("br"),t._v("\nnull和undefined不等于任何一个数据类型，"),a("br"),t._v("\n但是，"),a("br"),t._v("\nnull==undefined true"),a("br"),t._v("\nnull===undefined false")]),t._v(" "),a("p",[t._v("undefined === undefined true"),a("br"),t._v("\nnull === null true"),a("br"),t._v(" "),a("a",{attrs:{href:"https://segmentfault.com/q/1010000011022627",target:"_blank",rel:"https://docs.5102it.cn/CanvasBoard.html"}},[t._v("为什么null === null 为什么是true"),a("OutboundLink")],1),t._v(" "),a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200807145753.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2-数据类型之间的区别（堆栈内存）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据类型之间的区别（堆栈内存）"}},[t._v("#")]),t._v(" 2.数据类型之间的区别（堆栈内存）")]),t._v(" "),a("p",[t._v("webkit底层运行机制"),a("br"),t._v("\n底层渲染过程"),a("br"),t._v("\n1.浏览器打开页面，浏览器引擎自上而下渲染执行代码"),a("br"),t._v("\n2.执行代码时会给它一个环境ECStack（Execution Context Stack执行环境栈）=>栈内存stack"),a("br"),t._v("\n3.最开始执行的是全局代码，所以会形成一个EC（GLOBAL）全局上下文，在栈内存中执行全局的代码"),a("br"),t._v("\n4.在全局的执行上下文中有一个VO(GLOBAL)全局变量对象，可以把接下来定义的变量和对应的值储存到这里面"),a("br"),t._v("\n内存的概念"),a("br"),t._v("\nStack 栈内存 内存条 供代码自上而下执行，储存基本类型值"),a("br"),t._v("\nHeap 堆内存 硬盘 储存引用类型值"),a("br"),t._v("\n堆栈内存，就是在计算机内存中分配出来一块空间，用来执行和储存代码")]),t._v(" "),a("p",[t._v("基本数据类型（值类型）"),a("br"),t._v("\n结构简单，直接把创建的值存到“栈内存”中即可"),a("br"),t._v("\n定义一个变量的3个步骤 let a=12;"),a("br"),t._v("\n1.创建一个值，直接存在栈内存中"),a("br"),t._v("\n2.创建一个变量a，存在VO(GLOBAL)中"),a("br"),t._v("\n3.让创建的变量a和创建的值12关联在一起=> =赋值的操作"),a("br"),t._v("\n图例"),a("br"),t._v(" "),a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200627093654.png",alt:""}})]),t._v(" "),a("p",[t._v("引用数据类型"),a("br"),t._v("\n结构复杂，一个综合体，包含很多值"),a("br"),t._v("\n所以要单独开辟空间（堆内存）来储存"),a("br"),t._v("\n定义一个对象的3个步骤 let n={...}"),a("br"),t._v("\n1.创建值"),a("br"),t._v("\n开辟一个堆内存（heap），每个堆都有一个16进制的地址"),a("br"),t._v("\n把对象中的键值对分别储存到堆内存中"),a("br"),t._v("\n把堆内存的地址放在栈内存中，供变量引用"),a("br"),t._v("\n2.创建一个变量"),a("br"),t._v("\n3.让变量和之前创建的堆内存的地址关联"),a("br"),t._v("\n图例"),a("br"),t._v(" "),a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200627095812.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_3-2-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-类型转换"}},[t._v("#")]),t._v(" 3.2 类型转换")]),t._v(" "),a("h3",{attrs:{id:"typeof操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof操作符"}},[t._v("#")]),t._v(" typeof操作符")]),t._v(" "),a("p",[t._v("Number() 转换为数字， String() 转换为字符串， Boolean() 转化为布尔值。")]),t._v(" "),a("p",[t._v("在 JavaScript 中有 6 种不同的数据类型：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("string\nnumber\nboolean\nobject\nfunction\nsymbol\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("3 种对象类型：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Object\nDate\nArray\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("2 个不包含任何值的数据类型：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("null\nundefined\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("typeof操作符查看JavaScript变量的数据类型")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 boolean")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 function")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" myCar                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 undefined (如果 myCar 没有声明)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 object")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("ul",[a("li",[t._v("NaN 的数据类型是 number")]),t._v(" "),a("li",[t._v("数组(Array)的数据类型是 object")]),t._v(" "),a("li",[t._v("日期(Date)的数据类型为 object")]),t._v(" "),a("li",[t._v("null 的数据类型是 object")]),t._v(" "),a("li",[t._v("未定义变量的数据类型为 undefined")]),t._v(" "),a("li",[t._v("如果对象是 JavaScript Array 或 JavaScript Date ，我们就无法通过 typeof 来判断他们的类型，因为都是 返回 object。")])]),t._v(" "),a("h3",{attrs:{id:"constructor-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor-属性"}},[t._v("#")]),t._v(" constructor 属性")]),t._v(" "),a("p",[t._v("返回所有 JavaScript 变量的构造函数。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 String()  { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Number()  { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Boolean() { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Array()   { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'John'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Object()  { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Date()    { [native code] }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回函数 Function(){ [native code] }")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v('可以使用 constructor 属性来查看对象是否为数组 (包含字符串 "Array"):')]),t._v(" "),a("h3",{attrs:{id:"类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),a("p",[t._v("通过使用 JavaScript 函数")]),t._v(" "),a("p",[t._v("通过 JavaScript 自身自动转换")]),t._v(" "),a("p",[t._v("全局方法 String() 可以将任何类型的数字，字母，变量，表达式转换为字符串")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将变量 x 转换为字符串并返回")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数字 123 转换为字符串并返回")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数字表达式转换为字符串并返回")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("Number的方法 toString() 也是有同样的效果。更多Number的方法：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toExponential")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t把对象的值转换为指数计数法。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t把数字转换为字符串，结果的小数点后有指定n位数的数字。\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPrecision")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t把数字格式化为指定的长度。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("Boolean 方法 toString() 也有相同的效果。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 返回 "false"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 返回 "true"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("Date 方法 toString() 也有相同的效果。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回 Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200802100152.png",alt:""}})]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更多关于日期转换为字符串的函数：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象返回一个月中的某一天 (1 ~ 31)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象返回一周中的某一天 (0 ~ 6)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象以四位数字返回年份。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHours")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的小时 (0 ~ 23)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMilliseconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的毫秒(0 ~ 999)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMinutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的分钟 (0 ~ 59)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从 Date 对象返回月份 (0 ~ 11)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 Date 对象的秒数 (0 ~ 59)。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回 1970 年 1 月 1 日至今的毫秒数。")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("字符串转日期：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-12-25"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换日期格式")]),t._v("\nstr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/-/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "2010/08/01";')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建日期对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" date "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n反之，日期类型转化为格式化的字符串：\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//完整的格式化  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" time2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyyy-MM-dd hh:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("format")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fmt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"M+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//月份 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//日 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"h+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHours")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//小时 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMinutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//秒 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"q+"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//季度 ")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"S"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMilliseconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//毫秒 ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理年份")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reYear "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(y+)/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resultYear "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reYear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resultYear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" yearformatPart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resultYear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配到的格式化字符")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" yearVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" yearformatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        fmt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("yearformatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yearVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"("')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//本次需要替换的数据 ")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" formatPart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配到的格式化字符")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" replaceVal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fmt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formatPart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replaceVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);