(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{255:function(a,t,_){"use strict";_.r(t);var v=_(6),s=Object(v.a)({},(function(){var a=this,t=a.$createElement,_=a._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"_5-git相关问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-git相关问题"}},[a._v("#")]),a._v(" 5.git相关问题")]),a._v(" "),_("h2",{attrs:{id:"_1-开源项目中-github文件夹？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-开源项目中-github文件夹？"}},[a._v("#")]),a._v(" 1.开源项目中.github文件夹？")]),a._v(" "),_("h3",{attrs:{id:"_1-1-github文件夹"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-github文件夹"}},[a._v("#")]),a._v(" 1.1  .github文件夹")]),a._v(" "),_("p",[a._v("是存放关于github上的一些“配置”的。")]),a._v(" "),_("p",[a._v("比如.github/ISSUE_TEMPLATE.md就是项目提交issue时的模板。")]),a._v(" "),_("h3",{attrs:{id:"_1-2-yml文件-yaml"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-yml文件-yaml"}},[a._v("#")]),a._v(" 1.2  .yml文件--YAML")]),a._v(" "),_("p",[a._v(".github文件夹里还会有*.yml文件")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/hello_hww/img/raw/master/img1/20200730204439.png",alt:""}})]),a._v(" "),_("p",[a._v("yaml 语言（或者说是一种规范吧）可以编写 .yml 文件，和 json 一样是配置文件。")]),a._v(" "),_("p",[a._v("Yet Another Markup Language")]),a._v(" "),_("p",[a._v("另一种标记语言")]),a._v(" "),_("p",[a._v("特别适合用 grep、Python、Perl、Ruby 操作")]),a._v(" "),_("p",[a._v("一种基于Unicode容易阅读，容易和脚本语言交互的，用来表达资料序列的编程语言。")]),a._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/uploads/images/2018/0319/214332_5f678f5c_1623141.png",alt:"yaml"}})]),a._v(" "),_("p",[a._v("可参考--"),_("a",{attrs:{href:"https://link.jianshu.com?t=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2016%2F07%2Fyaml.html",target:"_blank",rel:"https://docs.5102it.cn/CanvasBoard.html"}},[a._v("阮一峰-YAML 语言教程"),_("OutboundLink")],1)]),a._v(" "),_("p",[a._v("也许是有人认为 json 的写法不爽，于是乎发明了这玩意，通过下面的例子，可以看到 yaml 写的配置文件确实要比 json 方便很多。")]),a._v(" "),_("h4",{attrs:{id:"_1-2-1-编写规则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-编写规则"}},[a._v("#")]),a._v(" 1.2.1.编写规则")]),a._v(" "),_("ul",[_("li",[_("strong",[a._v("大小写敏感")])])]),a._v(" "),_("p",[a._v("json 里也是大小写敏感的，这点二者一样。")]),a._v(" "),_("ul",[_("li",[_("strong",[a._v("使用缩进表示层级关系")])])]),a._v(" "),_("p",[a._v("json 中使用 "),_("code",[a._v("{}")]),a._v(" 的嵌套表示层级，而 yaml 使用缩进，后者更方便一些。")]),a._v(" "),_("ul",[_("li",[_("strong",[_("code",[a._v("#")]),a._v(" 表示注释")])])]),a._v(" "),_("p",[a._v("json 文件中不允许写注释，对于很长配置文件全靠字面意思猜挺痛快的，yaml 可以写注释，💯")]),a._v(" "),_("h4",{attrs:{id:"_1-2-2数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2数据结构"}},[a._v("#")]),a._v(" 1.2.2数据结构")]),a._v(" "),_("p",[a._v("配置文件理应十分简洁，与 json 相比，不用频繁的写 "),_("code",[a._v("{}")]),a._v(" 和 "),_("code",[a._v("[]")]),a._v("，毕竟换行和 "),_("code",[a._v("-")]),a._v(" 符号更加简洁，字符串也不需要频繁的加引号（无论是单引号还是双引号）。")]),a._v(" "),_("ul",[_("li",[a._v("对象")])]),a._v(" "),_("hr"),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("# conf.yml\nanimal: pets\nhash: { name: Steve, foo: bar }\n")])])]),_("p",[a._v("转换为 json 为：")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v('{\n    { "animal": "pets" },\n    { "hash": { "name": "Steve", "foo": "bar" } }\n}\n')])])]),_("ul",[_("li",[a._v("数组")])]),a._v(" "),_("hr"),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("# conf.yml\nAnimal:\n - Cat\n - Dog\n - Goldfish\n")])])]),_("p",[a._v("转换为 json 为：")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v('{ "Animal": [ "Cat", "Dog", "Goldfish" ] }\n')])])]),_("ul",[_("li",[a._v("字符串")])]),a._v(" "),_("hr"),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("# conf.yml\n# 正常情况下字符串不用写引号\nstr: 这是一行字符串\n# 字符串内有空格或者特殊字符时需要加引号\nstr: '内容： 字符串'\n")])])]),_("ul",[_("li",[a._v("null")])]),a._v(" "),_("hr"),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v("# conf.yml\nparent: ~\n")])])]),_("p",[a._v(".yml 中 ~ 表示 null，转换为 json 为：")]),a._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[a._v('{ "parent": null }\n')])])]),_("h4",{attrs:{id:"_1-2-3适应场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3适应场景"}},[a._v("#")]),a._v(" 1.2.3适应场景")]),a._v(" "),_("ul",[_("li",[a._v("脚本语言：由于实现简单，解析成本很低，YAML 特别适合在脚本语言中使用")]),a._v(" "),_("li",[a._v("序列化： YAML是由宿主语言数据类型直转，的比较适合做序列化。")]),a._v(" "),_("li",[a._v("配置文件：写 YAML 要比写 XML 快得多(无需关注标签或引号)，并且比 INI 文档功能更强。由于兼容性问题，不同语言间的数据流转建议不要用 YAML。")])]),a._v(" "),_("h4",{attrs:{id:"_1-2-4语言优点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4语言优点"}},[a._v("#")]),a._v(" 1.2.4语言优点")]),a._v(" "),_("ul",[_("li",[a._v("YAML易于人们阅读。")]),a._v(" "),_("li",[a._v("YAML数据在编程语言之间是可移植的。")]),a._v(" "),_("li",[a._v("YAML匹配敏捷语言的本机数据结构。")]),a._v(" "),_("li",[a._v("YAML具有一致的模型来支持通用工具。")]),a._v(" "),_("li",[a._v("YAML支持单程处理。")]),a._v(" "),_("li",[a._v("YAML具有表现力和可扩展性。")]),a._v(" "),_("li",[a._v("YAML易于实现和使用。")])]),a._v(" "),_("h4",{attrs:{id:"_1-2-5-yaml-语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-yaml-语法"}},[a._v("#")]),a._v(" 1.2.5 YAML 语法")]),a._v(" "),_("ul",[_("li",[a._v("使用空格 Space 缩进表示分层，不同层次之间的缩进可以使用不同的空格数目，但是同层元素一定左对齐，即前面空格数目相同（不能使用 Tab，各个系统 Tab对应的 Space 数目可能不同，导致层次混乱）")]),a._v(" "),_("li",[a._v("‘#’表示注释，只能单行注释，从#开始处到行尾")]),a._v(" "),_("li",[a._v("破折号后面跟一个空格（a dash and space）表示列表")]),a._v(" "),_("li",[a._v("用冒号和空格表示键值对 key: value")]),a._v(" "),_("li",[a._v("简单数据（scalars，标量数据）可以不使用引号括起来，包括字符串数据。用单引号或者双引号括起来的被当作字符串数据，在单引号或双引号中使用C风格的转义字符")])])])}),[],!1,null,null,null);t.default=s.exports}}]);